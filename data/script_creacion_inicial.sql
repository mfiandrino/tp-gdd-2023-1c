USE GD1C2023;
GO

-- Drop constraints

DECLARE @drop_constraints NVARCHAR(max) = ''
SELECT @drop_constraints += 'ALTER TABLE ' + QUOTENAME(OBJECT_SCHEMA_NAME(parent_object_id)) + '.'
                        +  QUOTENAME(OBJECT_NAME(parent_object_id)) + ' ' + 'DROP CONSTRAINT' + QUOTENAME(name)
FROM sys.foreign_keys f

EXEC sp_executesql @drop_constraints;
GO

-- Drop tablas

declare @drop_tablas NVARCHAR(max) = ''
SELECT @drop_tablas += 'DROP TABLE BASE_DE_GATOS_2.' + QUOTENAME(TABLE_NAME)
FROM INFORMATION_SCHEMA.TABLES
WHERE TABLE_SCHEMA = 'BASE_DE_GATOS_2' and TABLE_TYPE = 'BASE TABLE'

EXEC sp_executesql @drop_tablas;
GO

DECLARE @drop_procedures NVARCHAR(max) = ''
SELECT @drop_procedures += 'DROP PROCEDURE BASE_DE_GATOS_2.' + QUOTENAME(NAME)
FROM sys.procedures
WHERE schema_id = SCHEMA_ID('BASE_DE_GATOS_2')

EXEC sp_executesql @drop_procedures;
GO

IF EXISTS (SELECT name FROM sys.schemas WHERE name = 'BASE_DE_GATOS_2')
	DROP SCHEMA BASE_DE_GATOS_2;
GO

--Creamos el esquema donde realizaremos la migraci贸n
CREATE SCHEMA BASE_DE_GATOS_2
GO

--ENVIO_MENSAJERIA
CREATE TABLE BASE_DE_GATOS_2.ENVIO_MENSAJERIA (
	EM_NUMERO decimal(18, 0) PRIMARY KEY,
	EM_DIR_ORIGEN nvarchar(255) not null,
	EM_DIR_DEST nvarchar(255) not null,
	EM_LOCALIDAD_ID decimal(18, 0) not null,
	EM_KILOMETROS decimal(18,2) not null,
	EM_VALOR_ASEGURADO decimal(18,2) not null,
	EM_PRECIO_ENVIO decimal(18,2) not null,
	EM_PRECIO_SEGURO decimal(18,2) not null,
	EM_PROPINA decimal(18,2) not null,
	EM_TOTAL decimal(18,2) not null,
	EM_OBSERVACION nvarchar(255) not null,
	EM_FECHA datetime not null,
	EM_FECHA_ENTREGA datetime not null,
	EM_TIEMPO_ESTIMADO decimal(18,2) not null,
	EM_CALIFICACION decimal(18, 0) not null,
	-- FKs
	EM_ESTADO decimal(18, 0) not null,
	EM_USUARIO decimal(18, 0) not null,
	EM_TIPO_PAQUETE decimal(18, 0) not null,
	EM_REPARTIDOR decimal(18, 0) not null,
	EM_MEDIO_DE_PAGO decimal(18, 0) not null
);

-- Estado envio mensajeria
CREATE TABLE BASE_DE_GATOS_2.ESTADO_ENVIO_MENSAJERIA (
	ESTADO_EM_ID DECIMAL(18, 0) IDENTITY PRIMARY KEY,
	ESTADO_EM_NOMBRE NVARCHAR(50) not null
);

-- Tipo paquetes
CREATE TABLE BASE_DE_GATOS_2.TIPO_PAQUETES (
    TP_ID DECIMAL(18, 0) IDENTITY PRIMARY KEY,
    TP_NOMBRE NVARCHAR(50),
    TP_ALTO_MAX DECIMAL(18,2),
    TP_ANCHO_MAX DECIMAL(18,2),
    TP_LARGO_MAX DECIMAL(18,2),
    TP_PESO_MAX DECIMAL(18,2),
    TP_TIPO_PRECIO DECIMAL(18,2)
);

-- Locales
CREATE TABLE BASE_DE_GATOS_2.LOCAL_TIPOS (
	LOCAL_TIPO_ID DECIMAL(18, 0) IDENTITY PRIMARY KEY,
	LOCAL_TIPO_NOMBRE NVARCHAR(50)
);

CREATE TABLE BASE_DE_GATOS_2.LOCAL_CATEGORIAS (
	LOCAL_CATEGORIA_ID DECIMAL(18, 0) IDENTITY PRIMARY KEY,
	LOCAL_CATEGORIA_NOMBRE NVARCHAR(50),
	LOCAL_TIPO_ID DECIMAL(18, 0)
);

CREATE TABLE BASE_DE_GATOS_2.LOCALES (
	LOCAL_ID DECIMAL(18, 0) IDENTITY PRIMARY KEY,
	LOCAL_NOMBRE NVARCHAR(100),
	LOCAL_DESCRIPCION NVARCHAR(255),
	LOCAL_DIRECCION_ID DECIMAL(18, 0),
	LOCAL_CATEGORIA_ID DECIMAL(18, 0)
);

CREATE TABLE BASE_DE_GATOS_2.LOCAL_PRODUCTO (
	LP_LOCAL_ID DECIMAL(18, 0),
	LP_PRODUCTO_ID DECIMAL(18, 0),
	LP_PRODUCTO_PRECIO DECIMAL(18,2),
	PRIMARY KEY(LP_LOCAL_ID, LP_PRODUCTO_ID)
);

CREATE TABLE BASE_DE_GATOS_2.PRODUCTO_PEDIDO (
	PRODUCTO_ID DECIMAL(18, 0),
	PEDIDO_ID DECIMAL(18, 0),
	CANTIDAD DECIMAL(18, 0),
	PRECIO DECIMAL(18,2),
	PRIMARY KEY(PRODUCTO_ID, PEDIDO_ID)
);

-- Productos
CREATE TABLE BASE_DE_GATOS_2.PRODUCTOS (
	PRODUCTO_ID DECIMAL(18, 0) IDENTITY PRIMARY KEY,
	PRODUCTO_CODIGO NVARCHAR(50),
	PRODUCTO_NOMBRE NVARCHAR(50),
	PRODUCTO_DESCRIPCION NVARCHAR(255)
);

-- Horarios
CREATE TABLE BASE_DE_GATOS_2.HORARIO_DIAS (
	HORARIO_DIA_ID DECIMAL(18, 0) IDENTITY PRIMARY KEY,
	HORARIO_LOCAL_DIA NVARCHAR(50)
);

CREATE TABLE BASE_DE_GATOS_2.HORARIOS (
	HORARIO_ID DECIMAL(18, 0) IDENTITY PRIMARY KEY,
	HORARIO_DIA_ID DECIMAL(18, 0),
	HORARIO_LOCAL_HORA_APERTURA DECIMAL(18, 0),
	HORARIO_LOCAL_HORA_CIERRE DECIMAL(18, 0),
	LOCAL_ID DECIMAL(18, 0)
);

-- Localidades
CREATE TABLE BASE_DE_GATOS_2.LOCALIDADES (
	LOCALIDAD_ID DECIMAL(18, 0) IDENTITY PRIMARY KEY,
	LOCALIDAD_NOMBRE NVARCHAR(255),
	LOCALIDAD_PROVINCIA_ID DECIMAL(18, 0)
);

-- Direcci贸n
CREATE TABLE BASE_DE_GATOS_2.DIRECCION (
	DIRECCION_ID DECIMAL(18, 0) IDENTITY PRIMARY KEY,
	DIRECCION_DIRECCION NVARCHAR(255),
	LOCALIDAD_ID DECIMAL(18, 0)
);

-- Provincias
CREATE TABLE BASE_DE_GATOS_2.PROVINCIAS (
    PROVINCIA_ID DECIMAL(18, 0) IDENTITY PRIMARY KEY,
    PROVINCIA_NOMBRE NVARCHAR(255)
);

-- Repartidores
CREATE TABLE BASE_DE_GATOS_2.REPARTIDORES (
    REPARTIDOR_ID DECIMAL(18, 0) IDENTITY PRIMARY KEY,
    REPARTIDOR_NOMBRE NVARCHAR(255),
    REPARTIDOR_APELLIDO NVARCHAR(255),
    REPARTIDOR_DNI DECIMAL(18, 0),
    REPARTIDOR_TELEFONO DECIMAL(18, 0),
    REPARTIDOR_DIRECION NVARCHAR(255),
    REPARTIDOR_EMAIL NVARCHAR(255),
    REPARTIDOR_FECHA_NAC DATE,
    REPARTIDOR_LOCALIDAD_ACTIVA DECIMAL(18, 0),
    REPARTIDOR_TIPO_MOVILIDAD DECIMAL(18, 0)
);

-- Movilidad
CREATE TABLE BASE_DE_GATOS_2.MOVILIDAD (
    MOVILIDAD_ID DECIMAL(18, 0) IDENTITY PRIMARY KEY,
    MOVILIDAD_TIPO NVARCHAR(50)
);

-- Pedidos
CREATE TABLE BASE_DE_GATOS_2.PEDIDOS (
	PEDIDO_NUMERO decimal(18, 0) PRIMARY KEY,
	PEDIDO_TOTAL_PRODUCTOS decimal(18,2) not null,
	PEDIDO_TARIFA_SERVICIO decimal(18,2) not null,
	PEDIDO_TOTAL_CUPONES decimal(18,2) not null,
	PEDIDO_TOTAL_SERVICIO decimal(18,2) not null,
	PEDIDO_OBSERV nvarchar(255) not null,
	PEDIDO_FECHA_ENTREGA datetime not null,
	PEDIDO_FECHA datetime not null,
	PEDIDO_TIEMPO_ESTIMADO_ENTREGA decimal(18,2) not null,
	PEDIDO_CALIFICACION decimal(18, 0) not null,
	PRECIO DECIMAL(18,2),
    PROPINA DECIMAL(18,2),
    REPARTIDOR DECIMAL(18, 0),
    DIRECCION_USUARIO DECIMAL(18, 0),
	PEDIDO_ESTADO decimal(18, 0) not null,
	PEDIDO_USUARIO decimal(18, 0) not null,
	PEDIDO_LOCAL decimal(18, 0) not null,
	PEDIDO_MEDIO_PAGO decimal(18, 0) not null,
);

-- Estado pedido
CREATE TABLE BASE_DE_GATOS_2.ESTADO_PEDIDO (
    ESTADO_PEDIDO_ID DECIMAL(18, 0) IDENTITY PRIMARY KEY,
    ESTADO_PEDIDO_NOMBRE NVARCHAR(50)
);

-- Medios de pago
CREATE TABLE BASE_DE_GATOS_2.MEDIOS_DE_PAGO (
    MP_ID DECIMAL(18, 0) IDENTITY PRIMARY KEY,
    MP_NUMERO_TARJETA NVARCHAR(50),
    MP_TIPO DECIMAL(18, 0),
    MP_MARCA_TARJETA DECIMAL(18, 0),
    MP_USUARIO DECIMAL(18, 0)
);

CREATE TABLE BASE_DE_GATOS_2.TIPO_MEDIO_DE_PAGO (
    TIPO_MEDIO_PAGO_ID DECIMAL(18, 0) IDENTITY PRIMARY KEY,
    TMP_TIPO NVARCHAR(50)
);

CREATE TABLE BASE_DE_GATOS_2.MARCAS_TARJETA (
    MARCA_TARJETA_ID DECIMAL(18, 0) IDENTITY PRIMARY KEY,
    MARCA_TARJETA_NOMBRE NVARCHAR(100)
);

-- Reclamos
CREATE TABLE BASE_DE_GATOS_2.RECLAMOS (
  RECLAMO_NUMERO DECIMAL(18, 0) PRIMARY KEY,
  RECLAMO_FECHA datetime not null,
  RECLAMO_DESCRIPCION nvarchar(255) not null,
  RECLAMO_FECHA_SOLUCION datetime not null,
  RECLAMO_CALIFICACION decimal(18, 0) not null,
  -- FKs
  RECLAMO_SOLUCION decimal(18, 0) not null,
  RECLAMO_TIPO decimal(18, 0) not null,
  RECLAMO_ESTADO decimal(18, 0) not null,
  RECLAMO_USUARIO decimal(18, 0) not null,
  RECLAMO_PEDIDO decimal(18, 0) not null,
  RECLAMO_OPERADOR decimal(18, 0) not null,
);

-- Soluci贸n reclamo
CREATE TABLE BASE_DE_GATOS_2.SOLUCION_RECLAMO (
    SOLUCION_RECLAMO_ID DECIMAL(18, 0) IDENTITY PRIMARY KEY,
    SOLUCION_RECLAMO_SOLUCION NVARCHAR(50)
);

-- Tipo reclamo
CREATE TABLE BASE_DE_GATOS_2.TIPO_RECLAMO (
    TIPO_RECLAMO_ID DECIMAL(18, 0) IDENTITY PRIMARY KEY,
    TIPO_RECLAMO_TIPO NVARCHAR(50)
);

-- Estado reclamo
CREATE TABLE BASE_DE_GATOS_2.ESTADO_RECLAMO (
    ESTADO_RECLAMO_ID DECIMAL(18, 0) IDENTITY PRIMARY KEY,
    ESTADO_RECLAMO_ESTADO NVARCHAR(50)
);

-- Operadores
CREATE TABLE BASE_DE_GATOS_2.OPERADORES (
    OPERADOR_ID DECIMAL(18, 0) IDENTITY PRIMARY KEY,
    OPERADOR_NOMBRE NVARCHAR(255),
    OPERADOR_APELLIDO NVARCHAR(255),
    OPERADOR_DNI DECIMAL(18, 0),
    OPERADOR_TELEFONO DECIMAL(18, 0),
    OPERADOR_DIRECCION NVARCHAR(255),
    OPERADOR_MAIL NVARCHAR(255),
    OPERADOR_FECHA_NAC DATE
);

-- Usuarios
CREATE TABLE BASE_DE_GATOS_2.USUARIOS (
    USUARIO_ID DECIMAL(18, 0) IDENTITY PRIMARY KEY,
    USUARIO_NOMBRE NVARCHAR(255),
    USUARIO_APELLIDO NVARCHAR(255),
    USUARIO_DNI DECIMAL(18, 0),
    USUARIO_FECHA_REGISTRO DATETIME2(3),
    USUARIO_TELEFONO DECIMAL(18, 0),
    USUARIO_MAIL NVARCHAR(255),
    USUARIO_FECHA_NAC DATE,
);

-- Direcci贸n usuario
CREATE TABLE BASE_DE_GATOS_2.DIRECCION_USUARIO (
    DU_USUARIO_ID DECIMAL(18, 0),
    DU_DIRECCION_ID DECIMAL(18, 0),
    DU_DIRECCION_NOMBRE NVARCHAR(50),
    PRIMARY KEY (DU_USUARIO_ID, DU_DIRECCION_ID)
);

-- Cupones
CREATE TABLE BASE_DE_GATOS_2.CUPONES (
    CUPON_NUMERO DECIMAL(18, 0) PRIMARY KEY,
    CUPON_MONTO DECIMAL(18, 2),
    CUPON_FECHA_ALTA DATETIME,
    CUPON_FECHA_VENCIMIENTO DATETIME,
    USUARIO_ID DECIMAL(18, 0)
);

CREATE TABLE BASE_DE_GATOS_2.PEDIDO_CUPON (
    PEDIDO_NUMERO DECIMAL(18, 0),
    CUPON_NUMERO DECIMAL(18, 0),
		PEDIDO_CUPON_TIPO_ID DECIMAL(18, 0),
    PRIMARY KEY (PEDIDO_NUMERO, CUPON_NUMERO)
);

CREATE TABLE BASE_DE_GATOS_2.RECLAMO_CUPON (
    CUPON_NUMERO DECIMAL(18, 0),
    RECLAMO_NUMERO DECIMAL(18, 0),
		RECLAMO_CUPON_TIPO_ID DECIMAL(18, 0),
    PRIMARY KEY (CUPON_NUMERO, RECLAMO_NUMERO)
);

CREATE TABLE BASE_DE_GATOS_2.RECLAMO_CUPON_TIPO (
    RECLAMO_CUPON_TIPO_ID DECIMAL(18, 0) IDENTITY PRIMARY KEY,
    RECLAMO_CUPON_TIPO NVARCHAR(50)
);

CREATE TABLE BASE_DE_GATOS_2.PEDIDO_CUPON_TIPO(
    PEDIDO_CUPON_TIPO_ID DECIMAL(18, 0) IDENTITY PRIMARY KEY,
   	PEDIDO_CUPON_TIPO_NOMBRE NVARCHAR(50)
);

ALTER TABLE BASE_DE_GATOS_2.RECLAMO_CUPON
ADD CONSTRAINT FK_RECLAMO_CUPON_TIPO FOREIGN KEY (RECLAMO_CUPON_TIPO_ID) REFERENCES BASE_DE_GATOS_2.RECLAMO_CUPON_TIPO(RECLAMO_CUPON_TIPO_ID),
CONSTRAINT FK_RECLAMO_CUPON_CUPON FOREIGN KEY (CUPON_NUMERO) REFERENCES BASE_DE_GATOS_2.CUPONES(CUPON_NUMERO),
CONSTRAINT FK_RECLAMO_CUPON_RECLAMO FOREIGN KEY (RECLAMO_NUMERO) REFERENCES BASE_DE_GATOS_2.RECLAMOS(RECLAMO_NUMERO);
GO

ALTER TABLE BASE_DE_GATOS_2.PEDIDO_CUPON
ADD CONSTRAINT FK_PEDIDO_CUPON_PEDIDO FOREIGN KEY (PEDIDO_NUMERO) REFERENCES BASE_DE_GATOS_2.PEDIDOS(PEDIDO_NUMERO),
CONSTRAINT FK_PEDIDO_CUPON_CUPON FOREIGN KEY (CUPON_NUMERO) REFERENCES BASE_DE_GATOS_2.CUPONES(CUPON_NUMERO),
CONSTRAINT FK_PEDIDO_CUPON_CUPON_TIPO FOREIGN KEY (PEDIDO_CUPON_TIPO_ID) REFERENCES BASE_DE_GATOS_2.PEDIDO_CUPON_TIPO(PEDIDO_CUPON_TIPO_ID);
GO

ALTER TABLE BASE_DE_GATOS_2.CUPONES
ADD CONSTRAINT FK_USUARIO_CUPONES FOREIGN KEY (USUARIO_ID) REFERENCES BASE_DE_GATOS_2.USUARIOS(USUARIO_ID);
GO

ALTER TABLE BASE_DE_GATOS_2.LOCALES
ADD CONSTRAINT FK_LOCAL_CATEGORIA_LOCALES FOREIGN KEY (LOCAL_CATEGORIA_ID) REFERENCES BASE_DE_GATOS_2.LOCAL_CATEGORIAS(LOCAL_CATEGORIA_ID),
CONSTRAINT FK_LOCAL_DIRECCION_LOCALES FOREIGN KEY (LOCAL_DIRECCION_ID) REFERENCES BASE_DE_GATOS_2.DIRECCION(DIRECCION_ID);
GO

ALTER TABLE BASE_DE_GATOS_2.LOCAL_CATEGORIAS 
ADD CONSTRAINT FK_LOCAL_TIPO_LOCAL_CATEGORIAS FOREIGN KEY (LOCAL_TIPO_ID) REFERENCES BASE_DE_GATOS_2.LOCAL_TIPOS(LOCAL_TIPO_ID);
GO

ALTER TABLE BASE_DE_GATOS_2.LOCAL_PRODUCTO 
ADD CONSTRAINT FK_LP_LOCAL_LOCAL_PRODUCTO FOREIGN KEY (LP_LOCAL_ID) REFERENCES BASE_DE_GATOS_2.LOCALES(LOCAL_ID),
CONSTRAINT FK_LP_PRODUCTO_LOCAL_PRODUCTO FOREIGN KEY (LP_PRODUCTO_ID) REFERENCES BASE_DE_GATOS_2.PRODUCTOS(PRODUCTO_ID);
GO

ALTER TABLE BASE_DE_GATOS_2.PRODUCTO_PEDIDO 
ADD CONSTRAINT FK_PP_PRODUCTO_PRODUCTO_PEDIDO FOREIGN KEY (PRODUCTO_ID) REFERENCES BASE_DE_GATOS_2.PRODUCTOS(PRODUCTO_ID),
CONSTRAINT FK_PP_PEDIDO_PRODUCTO_PEDIDO FOREIGN KEY (PEDIDO_ID) REFERENCES BASE_DE_GATOS_2.PEDIDOS(PEDIDO_NUMERO);
GO

ALTER TABLE BASE_DE_GATOS_2.HORARIOS
ADD CONSTRAINT FK_HORARIO_DIA_HORARIOS FOREIGN KEY (HORARIO_DIA_ID) REFERENCES BASE_DE_GATOS_2.HORARIO_DIAS(HORARIO_DIA_ID),
CONSTRAINT FK_LOCAL_HORARIOS FOREIGN KEY (LOCAL_ID) REFERENCES BASE_DE_GATOS_2.LOCALES(LOCAL_ID);
GO

ALTER TABLE BASE_DE_GATOS_2.LOCALIDADES
ADD CONSTRAINT FK_LOCALIDAD_PROVINCIA_LOCALIDADES FOREIGN KEY (LOCALIDAD_PROVINCIA_ID) REFERENCES BASE_DE_GATOS_2.PROVINCIAS(PROVINCIA_ID);
GO

ALTER TABLE BASE_DE_GATOS_2.DIRECCION
ADD CONSTRAINT FK_LOCALIDAD_DIRECCION FOREIGN KEY (LOCALIDAD_ID) REFERENCES BASE_DE_GATOS_2.LOCALIDADES(LOCALIDAD_ID);
GO

ALTER TABLE BASE_DE_GATOS_2.REPARTIDORES
ADD CONSTRAINT FK_REPARTIDOR_LOCALIDAD_ACTIVA_REPARTIDORES FOREIGN KEY (REPARTIDOR_LOCALIDAD_ACTIVA) REFERENCES BASE_DE_GATOS_2.LOCALIDADES(LOCALIDAD_ID),
CONSTRAINT FK_REPARTIDOR_TIPO_MOVILIDAD_REPARTIDORES FOREIGN KEY (REPARTIDOR_TIPO_MOVILIDAD) REFERENCES BASE_DE_GATOS_2.MOVILIDAD(MOVILIDAD_ID);
GO

ALTER TABLE BASE_DE_GATOS_2.MEDIOS_DE_PAGO
ADD CONSTRAINT FK_TIPO_MEDIO_PAGO_MEDIO_PAGO FOREIGN KEY (MP_TIPO) REFERENCES BASE_DE_GATOS_2.TIPO_MEDIO_DE_PAGO(TIPO_MEDIO_PAGO_ID),
CONSTRAINT FK_TIPO_MARCAS_TARJETA_MEDIO_PAGO FOREIGN KEY (MP_MARCA_TARJETA) REFERENCES BASE_DE_GATOS_2.MARCAS_TARJETA(MARCA_TARJETA_ID),
CONSTRAINT FK_TIPO_USUARIOS_MEDIO_PAGO FOREIGN KEY (MP_USUARIO) REFERENCES BASE_DE_GATOS_2.USUARIOS(USUARIO_ID);
GO

ALTER TABLE BASE_DE_GATOS_2.DIRECCION_USUARIO
ADD CONSTRAINT FK_USUARIOS_DIRECCION_USUARIO FOREIGN KEY (DU_USUARIO_ID) REFERENCES BASE_DE_GATOS_2.USUARIOS (USUARIO_ID),
CONSTRAINT FK_DIRECCION_DIRECCION_USUARIO FOREIGN KEY (DU_DIRECCION_ID) REFERENCES BASE_DE_GATOS_2.DIRECCION (DIRECCION_ID);
GO

ALTER TABLE BASE_DE_GATOS_2.PEDIDOS
ADD CONSTRAINT FK_ESTADO_PEDIDO_PEDIDOS FOREIGN KEY (PEDIDO_ESTADO) REFERENCES BASE_DE_GATOS_2.ESTADO_PEDIDO(ESTADO_PEDIDO_ID),
CONSTRAINT FK_USUARIO_PEDIDOS FOREIGN KEY (PEDIDO_USUARIO) REFERENCES BASE_DE_GATOS_2.USUARIOS(USUARIO_ID),
CONSTRAINT FK_LOCAL_PEDIDOS FOREIGN KEY (PEDIDO_LOCAL) REFERENCES BASE_DE_GATOS_2.LOCALES(LOCAL_ID),
CONSTRAINT FK_MEDIO_DE_PAGO_PEDIDOS FOREIGN KEY (PEDIDO_MEDIO_PAGO) REFERENCES BASE_DE_GATOS_2.MEDIOS_DE_PAGO(MP_ID),
CONSTRAINT FK_PEDIDO_REPARTIDOR FOREIGN KEY (REPARTIDOR) REFERENCES BASE_DE_GATOS_2.REPARTIDORES(REPARTIDOR_ID),
CONSTRAINT FK_PEDIDO_DIRECCION FOREIGN KEY (DIRECCION_USUARIO) REFERENCES BASE_DE_GATOS_2.DIRECCION(DIRECCION_ID);
GO

ALTER TABLE BASE_DE_GATOS_2.RECLAMOS
ADD CONSTRAINT FK_TIPO_RECLAMO_RECLAMOS FOREIGN KEY (RECLAMO_TIPO) REFERENCES BASE_DE_GATOS_2.TIPO_RECLAMO(TIPO_RECLAMO_ID),
CONSTRAINT FK_ESTADO_RECLAMO_RECLAMOS FOREIGN KEY (RECLAMO_ESTADO) REFERENCES BASE_DE_GATOS_2.ESTADO_RECLAMO(ESTADO_RECLAMO_ID),
CONSTRAINT FK_SOLUCION_RECLAMO_RECLAMOS FOREIGN KEY (RECLAMO_SOLUCION) REFERENCES BASE_DE_GATOS_2.SOLUCION_RECLAMO(SOLUCION_RECLAMO_ID),
CONSTRAINT FK_USUARIOS_RECLAMOS FOREIGN KEY (RECLAMO_USUARIO) REFERENCES BASE_DE_GATOS_2.USUARIOS(USUARIO_ID),
CONSTRAINT FK_PEDIDOS_RECLAMOS FOREIGN KEY (RECLAMO_PEDIDO) REFERENCES BASE_DE_GATOS_2.PEDIDOS(PEDIDO_NUMERO),
CONSTRAINT FK_OPERADORES_RECLAMOS FOREIGN KEY (RECLAMO_OPERADOR) REFERENCES BASE_DE_GATOS_2.OPERADORES(OPERADOR_ID);
GO

ALTER TABLE BASE_DE_GATOS_2.ENVIO_MENSAJERIA
ADD CONSTRAINT FK_ESTADO_ENVIO_MENSAJERIA FOREIGN KEY (EM_ESTADO) REFERENCES BASE_DE_GATOS_2.ESTADO_ENVIO_MENSAJERIA (ESTADO_EM_ID),
CONSTRAINT FK_USUARIO_ENVIO_MENSAJERIA FOREIGN KEY (EM_USUARIO) REFERENCES BASE_DE_GATOS_2.USUARIOS (USUARIO_ID),
CONSTRAINT FK_TIPO_PAQUETE_ENVIO_MENSAJERIA FOREIGN KEY (EM_TIPO_PAQUETE) REFERENCES BASE_DE_GATOS_2.TIPO_PAQUETES (TP_ID),
CONSTRAINT FK_REPARTIDOR_ENVIO_MENSAJERIA FOREIGN KEY (EM_REPARTIDOR) REFERENCES BASE_DE_GATOS_2.REPARTIDORES (REPARTIDOR_ID),
CONSTRAINT FK_MEDIO_DE_PAGO_ENVIO_MENSAJERIA FOREIGN KEY (EM_MEDIO_DE_PAGO) REFERENCES BASE_DE_GATOS_2.MEDIOS_DE_PAGO (MP_ID);
GO

--Tipo paquetes
CREATE PROCEDURE BASE_DE_GATOS_2.migrar_tipos_paquete
	AS
		BEGIN
		INSERT INTO BASE_DE_GATOS_2.TIPO_PAQUETES (TP_NOMBRE, TP_ALTO_MAX, TP_ANCHO_MAX, TP_LARGO_MAX, TP_PESO_MAX, TP_TIPO_PRECIO)
			SELECT DISTINCT
				PAQUETE_TIPO,
				PAQUETE_ALTO_MAX,
				PAQUETE_ANCHO_MAX,
				PAQUETE_LARGO_MAX,
				PAQUETE_PESO_MAX,
				PAQUETE_TIPO_PRECIO
			FROM 
				gd_esquema.Maestra
			WHERE 
				PAQUETE_TIPO IS NOT NULL
				AND PAQUETE_ALTO_MAX IS NOT NULL
				AND PAQUETE_ANCHO_MAX IS NOT NULL
				AND PAQUETE_LARGO_MAX IS NOT NULL
				AND PAQUETE_PESO_MAX IS NOT NULL
				AND PAQUETE_TIPO_PRECIO IS NOT NULL
		END
GO

--Estado envio mensajeria
CREATE PROCEDURE BASE_DE_GATOS_2.migrar_estados_envio_mensajeria
	AS
		BEGIN
		INSERT INTO BASE_DE_GATOS_2.ESTADO_ENVIO_MENSAJERIA(ESTADO_EM_NOMBRE)
			SELECT DISTINCT
				m.ENVIO_MENSAJERIA_ESTADO
			FROM 
				gd_esquema.Maestra m
			WHERE 
				m.ENVIO_MENSAJERIA_ESTADO IS NOT NULL
		END
GO

-- Horario dias
CREATE PROCEDURE BASE_DE_GATOS_2.migrar_horario_dias
	AS
		BEGIN
		INSERT INTO BASE_DE_GATOS_2.HORARIO_DIAS(HORARIO_LOCAL_DIA)
			SELECT DISTINCT
				HORARIO_LOCAL_DIA
			FROM 
				gd_esquema.Maestra
			WHERE 
				HORARIO_LOCAL_DIA IS NOT NULL
		END
GO

--Local tipos
CREATE PROCEDURE BASE_DE_GATOS_2.migrar_local_tipos
	AS
		BEGIN
		INSERT INTO BASE_DE_GATOS_2.LOCAL_TIPOS(LOCAL_TIPO_NOMBRE)
			SELECT DISTINCT
				LOCAL_TIPO
			FROM 
				gd_esquema.Maestra
			WHERE 
				LOCAL_TIPO IS NOT NULL
		END
GO

--Local categorias
CREATE PROCEDURE BASE_DE_GATOS_2.migrar_local_categorias
	AS
		BEGIN
		INSERT INTO BASE_DE_GATOS_2.LOCAL_CATEGORIAS(LOCAL_CATEGORIA_NOMBRE, LOCAL_TIPO_ID)
			SELECT DISTINCT
				m.LOCAL_TIPO,
				(
					SELECT top 1 LOCAL_TIPO_ID
					FROM BASE_DE_GATOS_2.LOCAL_TIPOS lt 
					WHERE lt.LOCAL_TIPO_NOMBRE = m.LOCAL_TIPO
				)
			FROM 
				gd_esquema.Maestra m
			WHERE 
				m.LOCAL_TIPO IS NOT NULL
		END
GO

--Locales
CREATE PROCEDURE BASE_DE_GATOS_2.migrar_locales
	AS
		BEGIN
		INSERT INTO BASE_DE_GATOS_2.LOCALES(LOCAL_NOMBRE, LOCAL_DESCRIPCION, LOCAL_DIRECCION_ID, LOCAL_CATEGORIA_ID)
			SELECT DISTINCT
				m.LOCAL_NOMBRE,
				m.LOCAL_DESCRIPCION,
				d.DIRECCION_ID,
				(
					SELECT TOP 1 lc.LOCAL_CATEGORIA_ID
					FROM BASE_DE_GATOS_2.LOCAL_CATEGORIAS lc
					WHERE lc.LOCAL_CATEGORIA_NOMBRE = m.LOCAL_TIPO
				)
			FROM 
				gd_esquema.Maestra m
					JOIN BASE_DE_GATOS_2.PROVINCIAS p ON m.LOCAL_PROVINCIA = p.PROVINCIA_NOMBRE
					JOIN BASE_DE_GATOS_2.LOCALIDADES l ON m.LOCAL_LOCALIDAD = l.LOCALIDAD_NOMBRE AND l.LOCALIDAD_PROVINCIA_ID = p.PROVINCIA_ID
					JOIN BASE_DE_GATOS_2.DIRECCION d ON m.LOCAL_DIRECCION = d.DIRECCION_DIRECCION AND d.LOCALIDAD_ID = l.LOCALIDAD_ID
			WHERE 
				m.LOCAL_NOMBRE IS NOT NULL AND
				m.LOCAL_DESCRIPCION IS NOT NULL AND
				m.LOCAL_DIRECCION IS NOT NULL AND
				m.LOCAL_LOCALIDAD IS NOT NULL AND
				m.LOCAL_TIPO IS NOT NULL 
		END
GO

-- Horarios
CREATE PROCEDURE BASE_DE_GATOS_2.migrar_horarios
	AS
		BEGIN
		INSERT INTO BASE_DE_GATOS_2.HORARIOS(HORARIO_DIA_ID, HORARIO_LOCAL_HORA_APERTURA, HORARIO_LOCAL_HORA_CIERRE, LOCAL_ID)
			SELECT DISTINCT
				(
					SELECT TOP 1 hd.HORARIO_DIA_ID
					FROM BASE_DE_GATOS_2.HORARIO_DIAS hd
					WHERE hd.HORARIO_LOCAL_DIA = m.HORARIO_LOCAL_DIA
				),
				m.HORARIO_LOCAL_HORA_APERTURA,
				m.HORARIO_LOCAL_HORA_CIERRE,
				(
					SELECT TOP 1 l.LOCAL_ID
					FROM BASE_DE_GATOS_2.LOCALES l
					WHERE l.LOCAL_NOMBRE = m.LOCAL_NOMBRE
				)
			FROM
				gd_esquema.Maestra m						
			WHERE
				m.HORARIO_LOCAL_DIA IS NOT NULL
				AND m.HORARIO_LOCAL_HORA_APERTURA IS NOT NULL
				AND m.HORARIO_LOCAL_HORA_CIERRE IS NOT NULL
		END
GO

--Productos
CREATE PROCEDURE BASE_DE_GATOS_2.migrar_productos
	AS
		BEGIN
		INSERT INTO BASE_DE_GATOS_2.PRODUCTOS(PRODUCTO_CODIGO, PRODUCTO_NOMBRE, PRODUCTO_DESCRIPCION)
			SELECT DISTINCT
				m.PRODUCTO_LOCAL_CODIGO,
				m.PRODUCTO_LOCAL_NOMBRE,
				m.PRODUCTO_LOCAL_DESCRIPCION
			FROM 
				gd_esquema.Maestra m
			WHERE 
				m.PRODUCTO_LOCAL_CODIGO IS NOT NULL AND
				m.PRODUCTO_LOCAL_NOMBRE IS NOT NULL AND
				m.PRODUCTO_LOCAL_DESCRIPCION IS NOT NULL
		END
GO

-- Local producto
CREATE PROCEDURE BASE_DE_GATOS_2.migrar_local_producto
	AS
		BEGIN
		INSERT INTO BASE_DE_GATOS_2.LOCAL_PRODUCTO(LP_LOCAL_ID, LP_PRODUCTO_ID, LP_PRODUCTO_PRECIO)
			SELECT DISTINCT
				l.LOCAL_ID,
				p.PRODUCTO_ID,
				m.PRODUCTO_LOCAL_PRECIO
			FROM 
				gd_esquema.Maestra m
				JOIN BASE_DE_GATOS_2.PRODUCTOS p
					ON p.PRODUCTO_CODIGO = m.PRODUCTO_LOCAL_CODIGO
				JOIN BASE_DE_GATOS_2.LOCALES l
					ON l.LOCAL_NOMBRE = m.LOCAL_NOMBRE
						AND l.LOCAL_DESCRIPCION = m.LOCAL_DESCRIPCION
			WHERE m.PRODUCTO_LOCAL_CODIGO IS NOT NULL AND
				m.LOCAL_NOMBRE IS NOT NULL
		END
GO

--Usuarios
CREATE PROCEDURE BASE_DE_GATOS_2.migrar_usuarios
	AS
		BEGIN
		INSERT INTO BASE_DE_GATOS_2.USUARIOS(USUARIO_NOMBRE, USUARIO_APELLIDO, USUARIO_DNI, USUARIO_FECHA_REGISTRO, USUARIO_TELEFONO, USUARIO_MAIL, USUARIO_FECHA_NAC)
			SELECT DISTINCT
				m.USUARIO_NOMBRE,
				m.USUARIO_APELLIDO,
				m.USUARIO_DNI,
				m.USUARIO_FECHA_REGISTRO,
				m.USUARIO_TELEFONO,
				m.USUARIO_MAIL,
				m.USUARIO_FECHA_NAC
			FROM 
				gd_esquema.Maestra m
			WHERE 
				m.USUARIO_NOMBRE IS NOT NULL AND
				m.USUARIO_APELLIDO IS NOT NULL AND
				m.USUARIO_DNI IS NOT NULL AND
				m.USUARIO_FECHA_REGISTRO IS NOT NULL AND
				m.USUARIO_TELEFONO IS NOT NULL AND
				m.USUARIO_MAIL IS NOT NULL AND
				m.USUARIO_FECHA_NAC IS NOT NULL
		END
GO

-- Movilidad
CREATE PROCEDURE BASE_DE_GATOS_2.migrar_movilidades
	AS
		BEGIN
		INSERT INTO BASE_DE_GATOS_2.MOVILIDAD(MOVILIDAD_TIPO)
			SELECT DISTINCT
				m.REPARTIDOR_TIPO_MOVILIDAD
			FROM 
				gd_esquema.Maestra m
			WHERE 
				m.REPARTIDOR_TIPO_MOVILIDAD IS NOT NULL
		END
GO

-- Repartidores
CREATE PROCEDURE BASE_DE_GATOS_2.migrar_repartidores
	AS
		BEGIN
		INSERT INTO BASE_DE_GATOS_2.REPARTIDORES(
			REPARTIDOR_NOMBRE,
			REPARTIDOR_APELLIDO,
			REPARTIDOR_DNI,
			REPARTIDOR_TELEFONO,
			REPARTIDOR_DIRECION,
			REPARTIDOR_EMAIL,
			REPARTIDOR_FECHA_NAC,
			REPARTIDOR_LOCALIDAD_ACTIVA,
			REPARTIDOR_TIPO_MOVILIDAD
		)
			SELECT DISTINCT
				m.REPARTIDOR_NOMBRE,
				m.REPARTIDOR_APELLIDO,
				m.REPARTIDOR_DNI,
				m.REPARTIDOR_TELEFONO,
				m.REPARTIDOR_DIRECION,
				m.REPARTIDOR_EMAIL,
				m.REPARTIDOR_FECHA_NAC,
				(
					SELECT TOP 1 l.LOCALIDAD_ID
					FROM gd_esquema.Maestra m2
					JOIN BASE_DE_GATOS_2.LOCALIDADES l
						ON l.LOCALIDAD_NOMBRE = m2.DIRECCION_USUARIO_LOCALIDAD
					WHERE m2.DIRECCION_USUARIO_LOCALIDAD IS NOT NULL 
						AND m2.REPARTIDOR_DNI = m.REPARTIDOR_DNI
					ORDER BY PEDIDO_FECHA DESC
				),
				(
					SELECT TOP 1 tm.MOVILIDAD_ID
					FROM gd_esquema.Maestra m2
					JOIN BASE_DE_GATOS_2.MOVILIDAD tm
						ON tm.MOVILIDAD_TIPO = m2.REPARTIDOR_TIPO_MOVILIDAD
					WHERE m2.REPARTIDOR_TIPO_MOVILIDAD IS NOT NULL 
						AND m2.REPARTIDOR_DNI = m.REPARTIDOR_DNI
					ORDER BY PEDIDO_FECHA DESC
				)
			FROM 
				gd_esquema.Maestra m
			WHERE
				m.REPARTIDOR_DNI IS NOT NULL
		END
GO

-- Envio mensajeria
CREATE PROCEDURE BASE_DE_GATOS_2.migrar_envio_mensajeria
	AS
		BEGIN
		INSERT INTO BASE_DE_GATOS_2.ENVIO_MENSAJERIA(
			EM_NUMERO, EM_DIR_ORIGEN, EM_DIR_DEST, EM_LOCALIDAD_ID, EM_KILOMETROS, EM_VALOR_ASEGURADO, EM_PRECIO_ENVIO, EM_PRECIO_SEGURO,
		EM_PROPINA, EM_TOTAL, EM_OBSERVACION, EM_FECHA, EM_FECHA_ENTREGA, EM_TIEMPO_ESTIMADO, EM_CALIFICACION, EM_ESTADO, EM_USUARIO, EM_TIPO_PAQUETE,
		EM_REPARTIDOR, EM_MEDIO_DE_PAGO)
			SELECT DISTINCT
				m.ENVIO_MENSAJERIA_NRO,
				m.ENVIO_MENSAJERIA_DIR_ORIG,
				m.ENVIO_MENSAJERIA_DIR_DEST,
				l.LOCALIDAD_ID,
				m.ENVIO_MENSAJERIA_KM,
				m.ENVIO_MENSAJERIA_VALOR_ASEGURADO,
				m.ENVIO_MENSAJERIA_PRECIO_ENVIO,
				m.ENVIO_MENSAJERIA_PRECIO_SEGURO,
				m.ENVIO_MENSAJERIA_PROPINA,
				m.ENVIO_MENSAJERIA_TOTAL,
				m.ENVIO_MENSAJERIA_OBSERV,
				m.ENVIO_MENSAJERIA_FECHA,
				m.ENVIO_MENSAJERIA_FECHA_ENTREGA,
				m.ENVIO_MENSAJERIA_TIEMPO_ESTIMADO,
				m.ENVIO_MENSAJERIA_CALIFICACION,
				eme.ESTADO_EM_ID,
				u.USUARIO_ID,
				tp.TP_ID,
				r.REPARTIDOR_ID,
				mp.MP_ID
			FROM 
				gd_esquema.Maestra m
			JOIN BASE_DE_GATOS_2.PROVINCIAS prov
				ON m.ENVIO_MENSAJERIA_PROVINCIA = prov.PROVINCIA_NOMBRE
			JOIN BASE_DE_GATOS_2.LOCALIDADES l
				ON m.ENVIO_MENSAJERIA_LOCALIDAD = l.LOCALIDAD_NOMBRE
				AND prov.PROVINCIA_ID = l.LOCALIDAD_PROVINCIA_ID
			JOIN BASE_DE_GATOS_2.ESTADO_ENVIO_MENSAJERIA eme
				ON m.ENVIO_MENSAJERIA_ESTADO = eme.ESTADO_EM_NOMBRE
			JOIN BASE_DE_GATOS_2.USUARIOS u
				ON m.USUARIO_DNI = u.USUARIO_DNI
			JOIN BASE_DE_GATOS_2.TIPO_PAQUETES tp
				ON m.PAQUETE_TIPO = tp.TP_NOMBRE
			JOIN BASE_DE_GATOS_2.REPARTIDORES r
				ON m.REPARTIDOR_DNI = r.REPARTIDOR_DNI AND
				m.REPARTIDOR_EMAIL = r.REPARTIDOR_EMAIL
			JOIN BASE_DE_GATOS_2.TIPO_MEDIO_DE_PAGO tmp
				ON m.MEDIO_PAGO_TIPO = tmp.TMP_TIPO
			JOIN BASE_DE_GATOS_2.MEDIOS_DE_PAGO mp
				ON tmp.TIPO_MEDIO_PAGO_ID = mp.MP_TIPO AND
				m.MEDIO_PAGO_NRO_TARJETA = mp.MP_NUMERO_TARJETA
			WHERE 
				m.PEDIDO_ESTADO IS NOT NULL
		END
GO

--Estado pedido
CREATE PROCEDURE BASE_DE_GATOS_2.migrar_estados_pedido
	AS
		BEGIN
		INSERT INTO BASE_DE_GATOS_2.ESTADO_PEDIDO(ESTADO_PEDIDO_NOMBRE)
			SELECT DISTINCT
				m.PEDIDO_ESTADO
			FROM 
				gd_esquema.Maestra m
			WHERE 
				m.PEDIDO_ESTADO IS NOT NULL
		END
GO

-- Pedidos
CREATE PROCEDURE BASE_DE_GATOS_2.migrar_pedidos
	AS
		BEGIN
		INSERT INTO BASE_DE_GATOS_2.PEDIDOS(
			PEDIDO_NUMERO,
			PEDIDO_TOTAL_PRODUCTOS,
			PEDIDO_TARIFA_SERVICIO,
			PEDIDO_TOTAL_CUPONES,
			PEDIDO_TOTAL_SERVICIO,
			PEDIDO_OBSERV,
			PEDIDO_FECHA_ENTREGA,
			PEDIDO_FECHA,
			PEDIDO_TIEMPO_ESTIMADO_ENTREGA,
			PEDIDO_CALIFICACION,
			PEDIDO_ESTADO,
			PEDIDO_USUARIO,
			PEDIDO_LOCAL,
			PEDIDO_MEDIO_PAGO,
			PRECIO,
			PROPINA,
			REPARTIDOR,
			DIRECCION_USUARIO
		)
			SELECT DISTINCT
				m.PEDIDO_NRO,
				m.PEDIDO_TOTAL_PRODUCTOS,
				m.PEDIDO_TARIFA_SERVICIO,
				m.PEDIDO_TOTAL_CUPONES,
				m.PEDIDO_TOTAL_SERVICIO,
				m.PEDIDO_OBSERV,
				m.PEDIDO_FECHA_ENTREGA,
				m.PEDIDO_FECHA,
				m.PEDIDO_TIEMPO_ESTIMADO_ENTREGA,
				m.PEDIDO_CALIFICACION,
				(
					SELECT TOP 1 estp.ESTADO_PEDIDO_ID
					FROM BASE_DE_GATOS_2.ESTADO_PEDIDO estp
					WHERE estp.ESTADO_PEDIDO_NOMBRE = m.PEDIDO_ESTADO
				),
				(
					SELECT TOP 1 u.USUARIO_ID
					FROM BASE_DE_GATOS_2.USUARIOS u
					WHERE u.USUARIO_DNI = m.USUARIO_DNI
				),
				(
					SELECT TOP 1 l.LOCAL_ID
					FROM BASE_DE_GATOS_2.LOCALES l
					WHERE l.LOCAL_NOMBRE = m.LOCAL_NOMBRE
				),
				mdp.MP_ID,
				m.PEDIDO_PRECIO_ENVIO,
				m.PEDIDO_PROPINA,
				(
					SELECT TOP 1 r.REPARTIDOR_ID
					FROM BASE_DE_GATOS_2.REPARTIDORES r
					WHERE r.REPARTIDOR_DNI = m.REPARTIDOR_DNI
				),
				d.DIRECCION_ID
			FROM
				gd_esquema.Maestra m
					JOIN BASE_DE_GATOS_2.TIPO_MEDIO_DE_PAGO tmp
						ON tmp.TMP_TIPO = m.MEDIO_PAGO_TIPO
					JOIN BASE_DE_GATOS_2.MEDIOS_DE_PAGO mdp
						ON m.MEDIO_PAGO_NRO_TARJETA = mdp.MP_NUMERO_TARJETA
						AND mdp.MP_TIPO = tmp.TIPO_MEDIO_PAGO_ID
					JOIN BASE_DE_GATOS_2.DIRECCION d
						ON m.DIRECCION_USUARIO_DIRECCION = d.DIRECCION_DIRECCION
					JOIN BASE_DE_GATOS_2.DIRECCION_USUARIO du
						ON d.DIRECCION_ID = du.DU_DIRECCION_ID AND
						m.DIRECCION_USUARIO_NOMBRE = du.DU_DIRECCION_NOMBRE		
			WHERE 
				m.PEDIDO_NRO IS NOT NULL AND
				m.PEDIDO_TOTAL_PRODUCTOS IS NOT NULL AND
				m.PEDIDO_TARIFA_SERVICIO IS NOT NULL AND
				m.PEDIDO_TOTAL_CUPONES IS NOT NULL AND
				m.PEDIDO_TOTAL_SERVICIO IS NOT NULL AND
				m.PEDIDO_OBSERV IS NOT NULL AND
				m.PEDIDO_FECHA_ENTREGA IS NOT NULL AND
				m.PEDIDO_FECHA IS NOT NULL AND
				m.PEDIDO_TIEMPO_ESTIMADO_ENTREGA IS NOT NULL AND
				m.PEDIDO_CALIFICACION IS NOT NULL AND
				m.REPARTIDOR_DNI IS NOT NULL AND
				m.DIRECCION_USUARIO_DIRECCION IS NOT NULL
		END
GO

-- Operadores
CREATE PROCEDURE BASE_DE_GATOS_2.migrar_operadores
	AS
		BEGIN
		INSERT INTO BASE_DE_GATOS_2.OPERADORES(OPERADOR_NOMBRE, OPERADOR_APELLIDO, OPERADOR_DNI, OPERADOR_TELEFONO, OPERADOR_DIRECCION, OPERADOR_MAIL, OPERADOR_FECHA_NAC)
			SELECT DISTINCT
				m.OPERADOR_RECLAMO_NOMBRE,
				m.OPERADOR_RECLAMO_APELLIDO,
				m.OPERADOR_RECLAMO_DNI,
				m.OPERADOR_RECLAMO_TELEFONO,
				m.OPERADOR_RECLAMO_DIRECCION,
				m.OPERADOR_RECLAMO_MAIL,
				m.OPERADOR_RECLAMO_FECHA_NAC
			FROM 
				gd_esquema.Maestra m
			WHERE 
				m.OPERADOR_RECLAMO_NOMBRE IS NOT NULL AND
				m.OPERADOR_RECLAMO_APELLIDO IS NOT NULL AND
				m.OPERADOR_RECLAMO_DNI IS NOT NULL AND
				m.OPERADOR_RECLAMO_TELEFONO IS NOT NULL AND
				m.OPERADOR_RECLAMO_DIRECCION IS NOT NULL AND
				m.OPERADOR_RECLAMO_MAIL IS NOT NULL AND
				m.OPERADOR_RECLAMO_FECHA_NAC IS NOT NULL
		END
GO

--Tipo reclamo
CREATE PROCEDURE BASE_DE_GATOS_2.migrar_tipo_reclamo
	AS
		BEGIN
		INSERT INTO BASE_DE_GATOS_2.TIPO_RECLAMO(TIPO_RECLAMO_TIPO)
			SELECT DISTINCT
				m.RECLAMO_TIPO
			FROM 
				gd_esquema.Maestra m
			WHERE 
				m.RECLAMO_TIPO IS NOT NULL
		END
GO

--Estado reclamo
CREATE PROCEDURE BASE_DE_GATOS_2.migrar_estado_reclamo
	AS
		BEGIN
		INSERT INTO BASE_DE_GATOS_2.ESTADO_RECLAMO(ESTADO_RECLAMO_ESTADO)
			SELECT DISTINCT
				m.RECLAMO_ESTADO
			FROM 
				gd_esquema.Maestra m
			WHERE 
				m.RECLAMO_ESTADO IS NOT NULL
		END
GO

--Solucion reclamo
CREATE PROCEDURE BASE_DE_GATOS_2.migrar_solucion_reclamo
	AS
		BEGIN
		INSERT INTO BASE_DE_GATOS_2.SOLUCION_RECLAMO(SOLUCION_RECLAMO_SOLUCION)
			SELECT DISTINCT
				m.RECLAMO_SOLUCION
			FROM 
				gd_esquema.Maestra m
			WHERE 
				m.RECLAMO_SOLUCION IS NOT NULL
		END
GO

-- Reclamos
CREATE PROCEDURE BASE_DE_GATOS_2.migrar_reclamos
	AS
		BEGIN
		INSERT INTO BASE_DE_GATOS_2.RECLAMOS(RECLAMO_NUMERO, RECLAMO_FECHA, RECLAMO_DESCRIPCION, RECLAMO_FECHA_SOLUCION, RECLAMO_CALIFICACION, RECLAMO_SOLUCION, RECLAMO_TIPO, RECLAMO_ESTADO, RECLAMO_USUARIO, RECLAMO_PEDIDO, RECLAMO_OPERADOR)
			SELECT DISTINCT
				m.RECLAMO_NRO,
				m.RECLAMO_FECHA,
				m.RECLAMO_DESCRIPCION,
				m.RECLAMO_FECHA_SOLUCION,
				m.RECLAMO_CALIFICACION,
				(
					SELECT TOP 1 s.SOLUCION_RECLAMO_ID
					FROM BASE_DE_GATOS_2.SOLUCION_RECLAMO s
					WHERE s.SOLUCION_RECLAMO_SOLUCION = m.RECLAMO_SOLUCION
				),
				(
					SELECT TOP 1 t.TIPO_RECLAMO_ID
					FROM BASE_DE_GATOS_2.TIPO_RECLAMO t
					WHERE t.TIPO_RECLAMO_TIPO = m.RECLAMO_TIPO
				),
				(
					SELECT TOP 1 e.ESTADO_RECLAMO_ID
					FROM BASE_DE_GATOS_2.ESTADO_RECLAMO e
					WHERE e.ESTADO_RECLAMO_ESTADO = m.RECLAMO_ESTADO
				),
				(
					SELECT TOP 1 u.USUARIO_ID
					FROM BASE_DE_GATOS_2.USUARIOS u
					WHERE u.USUARIO_DNI = m.USUARIO_DNI
				),
				m.PEDIDO_NRO,
				(
					SELECT TOP 1 o.OPERADOR_ID
					FROM BASE_DE_GATOS_2.OPERADORES o
					WHERE o.OPERADOR_DNI = m.OPERADOR_RECLAMO_DNI
				)
			FROM 
				gd_esquema.Maestra m																		
			WHERE
				m.RECLAMO_NRO IS NOT NULL AND
				m.RECLAMO_FECHA IS NOT NULL AND
				m.PEDIDO_NRO IS NOT NULL 
		END
GO

--Provincias
CREATE PROCEDURE BASE_DE_GATOS_2.migrar_provincias
	AS
		BEGIN
		INSERT INTO BASE_DE_GATOS_2.PROVINCIAS(PROVINCIA_NOMBRE)
			SELECT DISTINCT
				m.DIRECCION_USUARIO_PROVINCIA
			FROM gd_esquema.Maestra m
			WHERE m.DIRECCION_USUARIO_PROVINCIA IS NOT NULL

			UNION
			
			SELECT 
				m.ENVIO_MENSAJERIA_PROVINCIA
			FROM gd_esquema.Maestra m
			WHERE m.ENVIO_MENSAJERIA_PROVINCIA IS NOT NULL

			UNION

			SELECT 
				m.LOCAL_PROVINCIA
			FROM gd_esquema.Maestra m
			WHERE m.LOCAL_PROVINCIA IS NOT NULL
		END
GO


-- WIP
-- Local Producto Pedido
CREATE PROCEDURE BASE_DE_GATOS_2.migrar_producto_pedido
	AS
		BEGIN
		INSERT INTO BASE_DE_GATOS_2.PRODUCTO_PEDIDO(
			PRODUCTO_ID,
			PEDIDO_ID,
			CANTIDAD,
			PRECIO
		)
			SELECT DISTINCT
				(
					SELECT TOP 1 p.PRODUCTO_ID
					FROM BASE_DE_GATOS_2.PRODUCTOS p
					WHERE p.PRODUCTO_CODIGO = m.PRODUCTO_LOCAL_CODIGO
					AND m.PRODUCTO_LOCAL_CODIGO IS NOT NULL
				) as Producto,
				(
					SELECT TOP 1 p.pedido_numero
					FROM BASE_DE_GATOS_2.PEDIDOS p
					WHERE p.PEDIDO_NUMERO = m.PEDIDO_NRO
					AND m.PEDIDO_NRO IS NOT NULL
				) as Pedido,
				SUM(m.PRODUCTO_CANTIDAD),
				MAX(m.PRODUCTO_LOCAL_PRECIO)
			FROM
				gd_esquema.Maestra m
			WHERE
				m.PRODUCTO_LOCAL_CODIGO IS NOT NULL AND
				m.PEDIDO_NRO IS NOT NULL
			GROUP BY m.PEDIDO_NRO, m.PRODUCTO_LOCAL_CODIGO
		END
GO

-- Localidades
CREATE PROCEDURE BASE_DE_GATOS_2.migrar_localidades
	AS
		BEGIN
		INSERT INTO BASE_DE_GATOS_2.LOCALIDADES(LOCALIDAD_NOMBRE, LOCALIDAD_PROVINCIA_ID)
			SELECT DISTINCT 
				m.ENVIO_MENSAJERIA_LOCALIDAD, 
				(
					SELECT TOP 1 p.PROVINCIA_ID
					FROM BASE_DE_GATOS_2.PROVINCIAS p
					WHERE p.PROVINCIA_NOMBRE = m.ENVIO_MENSAJERIA_PROVINCIA
				)
			FROM gd_esquema.Maestra m
			WHERE m.ENVIO_MENSAJERIA_LOCALIDAD IS NOT NULL

			UNION

			SELECT DISTINCT 
				DIRECCION_USUARIO_LOCALIDAD,
				(
					SELECT TOP 1 p.PROVINCIA_ID
					FROM BASE_DE_GATOS_2.PROVINCIAS p
					WHERE p.PROVINCIA_NOMBRE = m.DIRECCION_USUARIO_PROVINCIA
				)
			FROM gd_esquema.Maestra m
			WHERE m.DIRECCION_USUARIO_LOCALIDAD IS NOT NULL

			UNION

			SELECT DISTINCT 
				m.LOCAL_LOCALIDAD,
				(
					SELECT TOP 1 p.PROVINCIA_ID
					FROM BASE_DE_GATOS_2.PROVINCIAS p
					WHERE p.PROVINCIA_NOMBRE = m.LOCAL_PROVINCIA
				)
			FROM gd_esquema.Maestra m
			WHERE m.LOCAL_LOCALIDAD IS NOT NULL
		END
GO

-- Direcciones
CREATE PROCEDURE BASE_DE_GATOS_2.migrar_direcciones
	AS
		BEGIN
		INSERT INTO BASE_DE_GATOS_2.DIRECCION(DIRECCION_DIRECCION, LOCALIDAD_ID)
			SELECT DISTINCT 
				m.ENVIO_MENSAJERIA_DIR_ORIG direcciones,
				l.LOCALIDAD_ID
			FROM gd_esquema.Maestra m
				JOIN BASE_DE_GATOS_2.PROVINCIAS p ON m.ENVIO_MENSAJERIA_PROVINCIA = p.PROVINCIA_NOMBRE
				JOIN BASE_DE_GATOS_2.LOCALIDADES l ON m.ENVIO_MENSAJERIA_LOCALIDAD = l.LOCALIDAD_NOMBRE AND l.LOCALIDAD_PROVINCIA_ID = p.PROVINCIA_ID

			UNION

			SELECT DISTINCT 
				m.ENVIO_MENSAJERIA_DIR_DEST,
				l.LOCALIDAD_ID
			FROM gd_esquema.Maestra m
				JOIN BASE_DE_GATOS_2.PROVINCIAS p ON m.ENVIO_MENSAJERIA_PROVINCIA = p.PROVINCIA_NOMBRE
				JOIN BASE_DE_GATOS_2.LOCALIDADES l ON m.ENVIO_MENSAJERIA_LOCALIDAD = l.LOCALIDAD_NOMBRE AND l.LOCALIDAD_PROVINCIA_ID = p.PROVINCIA_ID

			UNION

			SELECT DISTINCT 
				m.DIRECCION_USUARIO_DIRECCION,
				l.LOCALIDAD_ID
			FROM gd_esquema.Maestra m
				JOIN BASE_DE_GATOS_2.PROVINCIAS p ON m.DIRECCION_USUARIO_PROVINCIA = p.PROVINCIA_NOMBRE
				JOIN BASE_DE_GATOS_2.LOCALIDADES l ON m.DIRECCION_USUARIO_LOCALIDAD = l.LOCALIDAD_NOMBRE AND l.LOCALIDAD_PROVINCIA_ID = p.PROVINCIA_ID

			UNION

			SELECT DISTINCT 
				LOCAL_DIRECCION,
				l.LOCALIDAD_ID
			FROM gd_esquema.Maestra m
				JOIN BASE_DE_GATOS_2.PROVINCIAS p ON m.LOCAL_PROVINCIA = p.PROVINCIA_NOMBRE
				JOIN BASE_DE_GATOS_2.LOCALIDADES l ON m.LOCAL_LOCALIDAD = l.LOCALIDAD_NOMBRE AND l.LOCALIDAD_PROVINCIA_ID = p.PROVINCIA_ID
		END
GO

-- Direccion usuario
CREATE PROCEDURE BASE_DE_GATOS_2.migrar_direcciones_usuario
	AS
		BEGIN
		INSERT INTO BASE_DE_GATOS_2.DIRECCION_USUARIO(DU_USUARIO_ID, DU_DIRECCION_NOMBRE, DU_DIRECCION_ID)
			SELECT DISTINCT
				u.USUARIO_ID,
				m.DIRECCION_USUARIO_NOMBRE,
				d.DIRECCION_ID
			FROM gd_esquema.Maestra m
				JOIN BASE_DE_GATOS_2.PROVINCIAS p ON m.DIRECCION_USUARIO_PROVINCIA = p.PROVINCIA_NOMBRE
				JOIN BASE_DE_GATOS_2.LOCALIDADES l ON m.DIRECCION_USUARIO_LOCALIDAD = l.LOCALIDAD_NOMBRE AND l.LOCALIDAD_PROVINCIA_ID = p.PROVINCIA_ID
				JOIN BASE_DE_GATOS_2.DIRECCION d ON m.DIRECCION_USUARIO_DIRECCION = d.DIRECCION_DIRECCION AND d.LOCALIDAD_ID = l.LOCALIDAD_ID
				JOIN BASE_DE_GATOS_2.USUARIOS u ON m.USUARIO_DNI = u.USUARIO_DNI
			WHERE m.DIRECCION_USUARIO_NOMBRE IS NOT NULL
		END
GO

-- Cupones
CREATE PROCEDURE BASE_DE_GATOS_2.migrar_cupones
	AS
		BEGIN
		INSERT INTO BASE_DE_GATOS_2.CUPONES(CUPON_NUMERO, CUPON_MONTO, CUPON_FECHA_ALTA, CUPON_FECHA_VENCIMIENTO, USUARIO_ID)
			SELECT DISTINCT
				m.CUPON_NRO,
				m.CUPON_MONTO,
				m.CUPON_FECHA_ALTA,
				m.CUPON_FECHA_VENCIMIENTO,
				(
					SELECT TOP 1 u.USUARIO_ID
					FROM BASE_DE_GATOS_2.USUARIOS u
					WHERE u.USUARIO_DNI = m.USUARIO_DNI
				)
			FROM 
				gd_esquema.Maestra m
			WHERE 
				m.CUPON_NRO IS NOT NULL AND
				m.CUPON_FECHA_ALTA IS NOT NULL

			UNION

			SELECT DISTINCT
				m.CUPON_RECLAMO_NRO,
				m.CUPON_MONTO,
				m.CUPON_FECHA_ALTA,
				m.CUPON_FECHA_VENCIMIENTO,
				(
					SELECT TOP 1 u.USUARIO_ID
					FROM BASE_DE_GATOS_2.USUARIOS u
					WHERE u.USUARIO_DNI = m.USUARIO_DNI
				)
			FROM 
				gd_esquema.Maestra m
			WHERE 
				m.CUPON_RECLAMO_NRO IS NOT NULL AND
				m.CUPON_FECHA_ALTA IS NOT NULL
		
		END
GO

-- Cupon tipo
CREATE PROCEDURE BASE_DE_GATOS_2.migrar_pedido_cupon_tipo
	AS
		BEGIN
		INSERT INTO BASE_DE_GATOS_2.PEDIDO_CUPON_TIPO(PEDIDO_CUPON_TIPO_NOMBRE)
			SELECT DISTINCT
				m.CUPON_TIPO
			FROM 
				gd_esquema.Maestra m
			WHERE 
				m.CUPON_TIPO IS NOT NULL
		END
GO

-- Reclamo cupon tipo
CREATE PROCEDURE BASE_DE_GATOS_2.migrar_reclamo_cupon_tipo
	AS
		BEGIN
		INSERT INTO BASE_DE_GATOS_2.RECLAMO_CUPON_TIPO(RECLAMO_CUPON_TIPO)
			SELECT DISTINCT
				m.CUPON_RECLAMO_TIPO
			FROM 
				gd_esquema.Maestra m
			WHERE 
				m.CUPON_RECLAMO_TIPO IS NOT NULL
		END
GO

-- Reclamo cupon
CREATE PROCEDURE BASE_DE_GATOS_2.migrar_reclamo_cupon
	AS
		BEGIN
		INSERT INTO BASE_DE_GATOS_2.RECLAMO_CUPON(CUPON_NUMERO, RECLAMO_NUMERO, RECLAMO_CUPON_TIPO_ID)
			SELECT DISTINCT
				m.CUPON_RECLAMO_NRO,
				m.CUPON_TIPO,
				t.RECLAMO_CUPON_TIPO_ID
			FROM 
				gd_esquema.Maestra m
			JOIN BASE_DE_GATOS_2.CUPONES c ON m.CUPON_NRO = c.CUPON_NUMERO
			JOIN BASE_DE_GATOS_2.RECLAMO_CUPON_TIPO t ON m.CUPON_RECLAMO_TIPO = t.RECLAMO_CUPON_TIPO
			WHERE 
				m.CUPON_NRO IS NOT NULL AND
				m.CUPON_RECLAMO_NRO IS NOT NULL AND
				m.CUPON_RECLAMO_TIPO IS NOT NULL
		END
GO

-- Pedido cupon
CREATE PROCEDURE BASE_DE_GATOS_2.migrar_pedido_cupon
	AS
		BEGIN
		INSERT INTO BASE_DE_GATOS_2.PEDIDO_CUPON(PEDIDO_NUMERO, CUPON_NUMERO, PEDIDO_CUPON_TIPO_ID)
			SELECT DISTINCT
				p.PEDIDO_NUMERO,
				m.CUPON_NRO,
				t.PEDIDO_CUPON_TIPO_ID
			FROM 
				gd_esquema.Maestra m
			JOIN BASE_DE_GATOS_2.PEDIDOS p ON m.PEDIDO_NRO = p.PEDIDO_NUMERO
			JOIN BASE_DE_GATOS_2.PEDIDO_CUPON_TIPO t ON m.CUPON_TIPO = t.PEDIDO_CUPON_TIPO_NOMBRE
			WHERE 
				m.CUPON_NRO IS NOT NULL AND
				m.PEDIDO_NRO IS NOT NULL
		END
GO

-- Marca tarjeta
CREATE PROCEDURE BASE_DE_GATOS_2.migrar_marcas_tarjeta
	AS
		BEGIN
		INSERT INTO BASE_DE_GATOS_2.MARCAS_TARJETA(MARCA_TARJETA_NOMBRE)
			SELECT DISTINCT
				m.MARCA_TARJETA
			FROM 
				gd_esquema.Maestra m
			WHERE 
				m.MARCA_TARJETA IS NOT NULL
		END
GO

-- Tipo medio de pago
CREATE PROCEDURE BASE_DE_GATOS_2.migrar_tipo_medio_de_pago
	AS
		BEGIN
		INSERT INTO BASE_DE_GATOS_2.TIPO_MEDIO_DE_PAGO(TMP_TIPO)
			SELECT DISTINCT
				m.MEDIO_PAGO_TIPO
			FROM 
				gd_esquema.Maestra m
			WHERE 
				m.MEDIO_PAGO_TIPO IS NOT NULL
		END
GO

--Medios de pago
CREATE PROCEDURE BASE_DE_GATOS_2.migrar_medios_de_pago
	AS
		BEGIN
		INSERT INTO BASE_DE_GATOS_2.MEDIOS_DE_PAGO(MP_NUMERO_TARJETA, MP_TIPO, MP_MARCA_TARJETA, MP_USUARIO)
			SELECT DISTINCT
				m.MEDIO_PAGO_NRO_TARJETA,
				tmp.TIPO_MEDIO_PAGO_ID,
				mar.MARCA_TARJETA_ID,
				u.USUARIO_ID
			FROM 
				gd_esquema.Maestra m
			JOIN BASE_DE_GATOS_2.TIPO_MEDIO_DE_PAGO tmp ON m.MEDIO_PAGO_TIPO = tmp.TMP_TIPO
			JOIN BASE_DE_GATOS_2.MARCAS_TARJETA mar ON m.MARCA_TARJETA = mar.MARCA_TARJETA_NOMBRE
			JOIN BASE_DE_GATOS_2.USUARIOS u ON m.USUARIO_DNI = u.USUARIO_DNI
			WHERE 
				m.MEDIO_PAGO_NRO_TARJETA IS NOT NULL
		END
GO

-- Executes
EXEC BASE_DE_GATOS_2.migrar_local_tipos --
EXEC BASE_DE_GATOS_2.migrar_local_categorias --
EXEC BASE_DE_GATOS_2.migrar_provincias --
EXEC BASE_DE_GATOS_2.migrar_localidades --
EXEC BASE_DE_GATOS_2.migrar_direcciones --
EXEC BASE_DE_GATOS_2.migrar_locales --
EXEC BASE_DE_GATOS_2.migrar_horario_dias --
EXEC BASE_DE_GATOS_2.migrar_horarios --
EXEC BASE_DE_GATOS_2.migrar_productos --
EXEC BASE_DE_GATOS_2.migrar_local_producto --
EXEC BASE_DE_GATOS_2.migrar_tipos_paquete --
EXEC BASE_DE_GATOS_2.migrar_estados_envio_mensajeria --
EXEC BASE_DE_GATOS_2.migrar_usuarios --
EXEC BASE_DE_GATOS_2.migrar_direcciones_usuario --
EXEC BASE_DE_GATOS_2.migrar_marcas_tarjeta --
EXEC BASE_DE_GATOS_2.migrar_tipo_medio_de_pago --
EXEC BASE_DE_GATOS_2.migrar_medios_de_pago --
EXEC BASE_DE_GATOS_2.migrar_movilidades --
EXEC BASE_DE_GATOS_2.migrar_repartidores --
EXEC BASE_DE_GATOS_2.migrar_envio_mensajeria --
EXEC BASE_DE_GATOS_2.migrar_estados_pedido --
EXEC BASE_DE_GATOS_2.migrar_pedidos --
EXEC BASE_DE_GATOS_2.migrar_producto_pedido --
EXEC BASE_DE_GATOS_2.migrar_operadores --
EXEC BASE_DE_GATOS_2.migrar_tipo_reclamo --
EXEC BASE_DE_GATOS_2.migrar_estado_reclamo --
EXEC BASE_DE_GATOS_2.migrar_solucion_reclamo --
EXEC BASE_DE_GATOS_2.migrar_reclamos --
EXEC BASE_DE_GATOS_2.migrar_cupones --
EXEC BASE_DE_GATOS_2.migrar_pedido_cupon_tipo --
EXEC BASE_DE_GATOS_2.migrar_reclamo_cupon --
EXEC BASE_DE_GATOS_2.migrar_reclamo_cupon_tipo --
EXEC BASE_DE_GATOS_2.migrar_pedido_cupon --