USE GD1C2023;
GO

-- Drop constraints

DECLARE @drop_constraints NVARCHAR(max) = ''
SELECT @drop_constraints += 'ALTER TABLE ' + QUOTENAME(OBJECT_SCHEMA_NAME(parent_object_id)) + '.'
                        +  QUOTENAME(OBJECT_NAME(parent_object_id)) + ' ' + 'DROP CONSTRAINT' + QUOTENAME(name)
FROM sys.foreign_keys f

EXEC sp_executesql @drop_constraints;
GO

-- Drop tablas

declare @drop_tablas NVARCHAR(max) = ''
SELECT @drop_tablas += 'DROP TABLE BASE_DE_GATOS_2.' + QUOTENAME(TABLE_NAME)
FROM INFORMATION_SCHEMA.TABLES
WHERE TABLE_SCHEMA = 'BASE_DE_GATOS_2' and TABLE_TYPE = 'BASE TABLE'

EXEC sp_executesql @drop_tablas;
GO

DECLARE @drop_procedures NVARCHAR(max) = ''
SELECT @drop_procedures += 'DROP PROCEDURE BASE_DE_GATOS_2.' + QUOTENAME(NAME)
FROM sys.procedures
WHERE schema_id = SCHEMA_ID('BASE_DE_GATOS_2')

EXEC sp_executesql @drop_procedures;
GO

IF EXISTS (SELECT name FROM sys.schemas WHERE name = 'BASE_DE_GATOS_2')
	DROP SCHEMA BASE_DE_GATOS_2;
GO

--Creamos el esquema donde realizaremos la migraciè´¸n
CREATE SCHEMA BASE_DE_GATOS_2
GO

--ENVIO_MENSAJERIA
CREATE TABLE BASE_DE_GATOS_2.ENVIOS_MENSAJERIA (
	NUMERO decimal(18, 0) PRIMARY KEY,
	KILOMETROS decimal(18,2) not null,
	VALOR_ASEGURADO decimal(18,2) not null,
	PRECIO_ENVIO decimal(18,2) not null,
	PRECIO_SEGURO decimal(18,2) not null,
	PROPINA decimal(18,2) not null,
	TOTAL decimal(18,2) not null,
	OBSERVACION nvarchar(255) not null,
	FECHA datetime not null,
	FECHA_ENTREGA datetime not null,
	TIEMPO_ESTIMADO_ENTREGA decimal(18,2) not null,
	CALIFICACION decimal(18, 0) not null,
	-- FKs
	DIRECCION_ORIGEN_ID decimal(18, 0) not null,
	DIRECCION_DESTINO_ID decimal(18, 0) not null,
	ESTADO_ID decimal(18, 0) not null,
	USUARIO_ID decimal(18, 0) not null,
	TIPO_PAQUETE_ID decimal(18, 0) not null,
	REPARTIDOR_ID decimal(18, 0) not null,
	MEDIO_PAGO_ID decimal(18, 0) not null
);

-- Estado envio mensajeria
CREATE TABLE BASE_DE_GATOS_2.ENVIO_MENSAJERIA_ESTADOS (
	ID DECIMAL(18, 0) IDENTITY PRIMARY KEY,
	ESTADO NVARCHAR(50) not null
);

-- Tipo paquetes
CREATE TABLE BASE_DE_GATOS_2.PAQUETE_TIPOS (
    ID DECIMAL(18, 0) IDENTITY PRIMARY KEY,
    TIPO NVARCHAR(50),
    ALTO_MAX DECIMAL(18,2),
    ANCHO_MAX DECIMAL(18,2),
    LARGO_MAX DECIMAL(18,2),
    PESO_MAX DECIMAL(18,2),
    PRECIO DECIMAL(18,2)
);

-- Locales
CREATE TABLE BASE_DE_GATOS_2.LOCAL_TIPOS (
	ID DECIMAL(18, 0) IDENTITY PRIMARY KEY,
	TIPO NVARCHAR(50)
);

CREATE TABLE BASE_DE_GATOS_2.LOCAL_CATEGORIAS (
	ID DECIMAL(18, 0) IDENTITY PRIMARY KEY,
	CATEGORIA NVARCHAR(50),
	-- FKs
	TIPO_ID DECIMAL(18, 0)
);

CREATE TABLE BASE_DE_GATOS_2.LOCALES (
	ID DECIMAL(18, 0) IDENTITY PRIMARY KEY,
	NOMBRE NVARCHAR(100),
	DESCRIPCION NVARCHAR(255),
	-- FKs
	DIRECCION_ID DECIMAL(18, 0),
	CATEGORIA_ID DECIMAL(18, 0)
);

CREATE TABLE BASE_DE_GATOS_2.LOCAL_PRODUCTO (
	PRECIO DECIMAL(18,2),
	-- FKs
	LOCAL_ID DECIMAL(18, 0),
	PRODUCTO_ID DECIMAL(18, 0),
	PRIMARY KEY(LOCAL_ID, PRODUCTO_ID)
);

CREATE TABLE BASE_DE_GATOS_2.PRODUCTO_PEDIDO (
	CANTIDAD DECIMAL(18, 0),
	PRECIO DECIMAL(18,2),
	-- FKs
	PRODUCTO_ID DECIMAL(18, 0),
	PEDIDO_NUMERO DECIMAL(18, 0),
	PRIMARY KEY(PRODUCTO_ID, PEDIDO_NUMERO)
);

-- Productos
CREATE TABLE BASE_DE_GATOS_2.PRODUCTOS (
	ID DECIMAL(18, 0) IDENTITY PRIMARY KEY,
	CODIGO NVARCHAR(50),
	NOMBRE NVARCHAR(50),
	DESCRIPCION NVARCHAR(255)
);

-- Horarios
CREATE TABLE BASE_DE_GATOS_2.HORARIO_DIAS (
	ID DECIMAL(18, 0) IDENTITY PRIMARY KEY,
	DIA NVARCHAR(50)
);

CREATE TABLE BASE_DE_GATOS_2.HORARIOS (
	ID DECIMAL(18, 0) IDENTITY PRIMARY KEY,
	HORA_APERTURA DECIMAL(18, 0),
	HORA_CIERRE DECIMAL(18, 0),
	-- FKs
	DIA_ID DECIMAL(18, 0),
	LOCAL_ID DECIMAL(18, 0)
);

-- Localidades
CREATE TABLE BASE_DE_GATOS_2.LOCALIDADES (
	ID DECIMAL(18, 0) IDENTITY PRIMARY KEY,
	NOMBRE NVARCHAR(255),
	PROVINCIA_ID DECIMAL(18, 0)
);

-- Direccion
CREATE TABLE BASE_DE_GATOS_2.DIRECCIONES (
	ID DECIMAL(18, 0) IDENTITY PRIMARY KEY,
	DIRECCION NVARCHAR(255),
	LOCALIDAD_ID DECIMAL(18, 0)
);

-- Provincias
CREATE TABLE BASE_DE_GATOS_2.PROVINCIAS (
    ID DECIMAL(18, 0) IDENTITY PRIMARY KEY,
    NOMBRE NVARCHAR(255)
);

-- Repartidores
CREATE TABLE BASE_DE_GATOS_2.REPARTIDORES (
    ID DECIMAL(18, 0) IDENTITY PRIMARY KEY,
    NOMBRE NVARCHAR(255),
    APELLIDO NVARCHAR(255),
    DNI DECIMAL(18, 0),
    TELEFONO DECIMAL(18, 0),
    DIRECCION NVARCHAR(255),
    EMAIL NVARCHAR(255),
    FECHA_NACIMIENTO DATE,
	-- FKs
    LOCALIDAD_ACTIVA_ID DECIMAL(18, 0),
    MOVILIDAD_ID DECIMAL(18, 0)
);

-- Movilidad
CREATE TABLE BASE_DE_GATOS_2.MOVILIDADES (
    ID DECIMAL(18, 0) IDENTITY PRIMARY KEY,
    MOVILIDAD NVARCHAR(50)
);

-- Pedidos
CREATE TABLE BASE_DE_GATOS_2.PEDIDOS (
	NUMERO decimal(18, 0) PRIMARY KEY,
	TOTAL_PRODUCTOS decimal(18,2) not null,
	TARIFA_SERVICIO decimal(18,2) not null,
	TOTAL_CUPONES decimal(18,2) not null,
	TOTAL_SERVICIO decimal(18,2) not null,
	OBSERVACION nvarchar(255) not null,
	FECHA_ENTREGA datetime not null,
	FECHA datetime not null,
	TIEMPO_ESTIMADO_ENTREGA decimal(18,2) not null,
	CALIFICACION decimal(18, 0) not null,
	PRECIO_ENVIO decimal(18,2),
  PROPINA decimal(18,2),
	-- FKs
  REPARTIDOR_ID DECIMAL(18, 0),
  DIRECCION_USUARIO_ID DECIMAL(18, 0),
	ESTADO_ID decimal(18, 0) not null,
	USUARIO_ID decimal(18, 0) not null,
	LOCAL_ID decimal(18, 0) not null,
	MEDIO_PAGO_ID decimal(18, 0) not null,
);

-- Estado pedido
CREATE TABLE BASE_DE_GATOS_2.PEDIDO_ESTADOS (
    ID DECIMAL(18, 0) IDENTITY PRIMARY KEY,
    ESTADO NVARCHAR(50)
);

-- Medios de pago
CREATE TABLE BASE_DE_GATOS_2.MEDIOS_DE_PAGO (
    ID DECIMAL(18, 0) IDENTITY PRIMARY KEY,
    NUMERO_TARJETA NVARCHAR(50),
	-- FKs
    TIPO_ID DECIMAL(18, 0),
    MARCA_TARJETA_ID DECIMAL(18, 0),
    USUARIO_ID DECIMAL(18, 0)
);

CREATE TABLE BASE_DE_GATOS_2.MEDIO_DE_PAGO_TIPOS (
    ID DECIMAL(18, 0) IDENTITY PRIMARY KEY,
    TIPO NVARCHAR(50)
);

CREATE TABLE BASE_DE_GATOS_2.MARCAS_TARJETA (
    ID DECIMAL(18, 0) IDENTITY PRIMARY KEY,
    NOMBRE NVARCHAR(100)
);

-- Reclamos
CREATE TABLE BASE_DE_GATOS_2.RECLAMOS (
  NUMERO DECIMAL(18, 0) PRIMARY KEY,
  FECHA datetime not null,
  DESCRIPCION nvarchar(255) not null,
  FECHA_SOLUCION datetime not null,
  CALIFICACION decimal(18, 0) not null,
  -- FKs
  SOLUCION_ID decimal(18, 0) not null,
  TIPO_ID decimal(18, 0) not null,
  ESTADO_ID decimal(18, 0) not null,
  USUARIO_ID decimal(18, 0) not null,
  PEDIDO_NUMERO decimal(18, 0) not null,
  OPERADOR_ID decimal(18, 0) not null,
);

-- Solucion reclamo
CREATE TABLE BASE_DE_GATOS_2.RECLAMO_SOLUCIONES (
    ID DECIMAL(18, 0) IDENTITY PRIMARY KEY,
    SOLUCION NVARCHAR(50)
);

-- Tipo reclamo
CREATE TABLE BASE_DE_GATOS_2.RECLAMO_TIPOS (
    ID DECIMAL(18, 0) IDENTITY PRIMARY KEY,
    TIPO NVARCHAR(50)
);

-- Estado reclamo
CREATE TABLE BASE_DE_GATOS_2.RECLAMO_ESTADOS (
    ID DECIMAL(18, 0) IDENTITY PRIMARY KEY,
    ESTADO NVARCHAR(50)
);

-- Operadores
CREATE TABLE BASE_DE_GATOS_2.OPERADORES (
    ID DECIMAL(18, 0) IDENTITY PRIMARY KEY,
    NOMBRE NVARCHAR(255),
    APELLIDO NVARCHAR(255),
    DNI DECIMAL(18, 0),
    TELEFONO DECIMAL(18, 0),
    DIRECCION NVARCHAR(255),
    EMAIL NVARCHAR(255),
    FECHA_NACIMIENTO DATE
);

-- Usuarios
CREATE TABLE BASE_DE_GATOS_2.USUARIOS (
    ID DECIMAL(18, 0) IDENTITY PRIMARY KEY,
    NOMBRE NVARCHAR(255),
    APELLIDO NVARCHAR(255),
    DNI DECIMAL(18, 0),
    FECHA_REGISTRO DATETIME2(3),
    TELEFONO DECIMAL(18, 0),
    EMAIL NVARCHAR(255),
    FECHA_NACIMIENTO DATE,
);

-- Direccion usuario
CREATE TABLE BASE_DE_GATOS_2.DIRECCION_USUARIO (
    NOMBRE NVARCHAR(50),
	-- FKs
	USUARIO_ID DECIMAL(18, 0),
    DIRECCION_ID DECIMAL(18, 0),
    PRIMARY KEY (USUARIO_ID, DIRECCION_ID)
);

-- Cupones
CREATE TABLE BASE_DE_GATOS_2.CUPONES (
    NUMERO DECIMAL(18, 0) PRIMARY KEY,
    MONTO DECIMAL(18, 2),
    FECHA_ALTA DATETIME,
    FECHA_VENCIMIENTO DATETIME,
    USUARIO_ID DECIMAL(18, 0)
);

CREATE TABLE BASE_DE_GATOS_2.PEDIDO_CUPON (
    PEDIDO_NUMERO DECIMAL(18, 0),
    CUPON_NUMERO DECIMAL(18, 0),
	TIPO_ID DECIMAL(18, 0),
    PRIMARY KEY (PEDIDO_NUMERO, CUPON_NUMERO)
);

CREATE TABLE BASE_DE_GATOS_2.RECLAMO_CUPON (
    CUPON_NUMERO DECIMAL(18, 0),
    RECLAMO_NUMERO DECIMAL(18, 0),
	TIPO_ID DECIMAL(18, 0),
    PRIMARY KEY (CUPON_NUMERO, RECLAMO_NUMERO)
);

CREATE TABLE BASE_DE_GATOS_2.RECLAMO_CUPON_TIPO (
    ID DECIMAL(18, 0) IDENTITY PRIMARY KEY,
    TIPO NVARCHAR(50)
);

CREATE TABLE BASE_DE_GATOS_2.PEDIDO_CUPON_TIPOS(
    ID DECIMAL(18, 0) IDENTITY PRIMARY KEY,
   	TIPO NVARCHAR(50)
);

ALTER TABLE BASE_DE_GATOS_2.RECLAMO_CUPON
ADD CONSTRAINT FK_RECLAMO_CUPON_TIPO FOREIGN KEY (TIPO_ID) REFERENCES BASE_DE_GATOS_2.RECLAMO_CUPON_TIPO(ID),
CONSTRAINT FK_RECLAMO_CUPON_CUPON FOREIGN KEY (CUPON_NUMERO) REFERENCES BASE_DE_GATOS_2.CUPONES(NUMERO),
CONSTRAINT FK_RECLAMO_CUPON_RECLAMO FOREIGN KEY (RECLAMO_NUMERO) REFERENCES BASE_DE_GATOS_2.RECLAMOS(NUMERO);
GO

ALTER TABLE BASE_DE_GATOS_2.PEDIDO_CUPON
ADD CONSTRAINT FK_PEDIDO_CUPON_PEDIDO FOREIGN KEY (PEDIDO_NUMERO) REFERENCES BASE_DE_GATOS_2.PEDIDOS(NUMERO),
CONSTRAINT FK_PEDIDO_CUPON_CUPON FOREIGN KEY (CUPON_NUMERO) REFERENCES BASE_DE_GATOS_2.CUPONES(NUMERO),
CONSTRAINT FK_PEDIDO_CUPON_CUPON_TIPO FOREIGN KEY (TIPO_ID) REFERENCES BASE_DE_GATOS_2.PEDIDO_CUPON_TIPOS(ID);
GO

ALTER TABLE BASE_DE_GATOS_2.CUPONES
ADD CONSTRAINT FK_USUARIO_CUPONES FOREIGN KEY (USUARIO_ID) REFERENCES BASE_DE_GATOS_2.USUARIOS(ID);
GO

ALTER TABLE BASE_DE_GATOS_2.LOCALES
ADD CONSTRAINT FK_LOCAL_CATEGORIA_LOCALES FOREIGN KEY (CATEGORIA_ID) REFERENCES BASE_DE_GATOS_2.LOCAL_CATEGORIAS(ID),
CONSTRAINT FK_LOCAL_DIRECCION_LOCALES FOREIGN KEY (DIRECCION_ID) REFERENCES BASE_DE_GATOS_2.DIRECCIONES(ID);
GO

ALTER TABLE BASE_DE_GATOS_2.LOCAL_CATEGORIAS 
ADD CONSTRAINT FK_LOCAL_TIPO_LOCAL_CATEGORIAS FOREIGN KEY (TIPO_ID) REFERENCES BASE_DE_GATOS_2.LOCAL_TIPOS(ID);
GO

ALTER TABLE BASE_DE_GATOS_2.LOCAL_PRODUCTO 
ADD CONSTRAINT FK_LP_LOCAL_LOCAL_PRODUCTO FOREIGN KEY (LOCAL_ID) REFERENCES BASE_DE_GATOS_2.LOCALES(ID),
CONSTRAINT FK_LP_PRODUCTO_LOCAL_PRODUCTO FOREIGN KEY (PRODUCTO_ID) REFERENCES BASE_DE_GATOS_2.PRODUCTOS(ID);
GO

ALTER TABLE BASE_DE_GATOS_2.PRODUCTO_PEDIDO 
ADD CONSTRAINT FK_PP_PRODUCTO_PRODUCTO_PEDIDO FOREIGN KEY (PRODUCTO_ID) REFERENCES BASE_DE_GATOS_2.PRODUCTOS(ID),
CONSTRAINT FK_PP_PEDIDO_PRODUCTO_PEDIDO FOREIGN KEY (PEDIDO_NUMERO) REFERENCES BASE_DE_GATOS_2.PEDIDOS(NUMERO);
GO

ALTER TABLE BASE_DE_GATOS_2.HORARIOS
ADD CONSTRAINT FK_HORARIO_DIA_HORARIOS FOREIGN KEY (DIA_ID) REFERENCES BASE_DE_GATOS_2.HORARIO_DIAS(ID),
CONSTRAINT FK_LOCAL_HORARIOS FOREIGN KEY (LOCAL_ID) REFERENCES BASE_DE_GATOS_2.LOCALES(ID);
GO

ALTER TABLE BASE_DE_GATOS_2.LOCALIDADES
ADD CONSTRAINT FK_LOCALIDAD_PROVINCIA_LOCALIDADES FOREIGN KEY (PROVINCIA_ID) REFERENCES BASE_DE_GATOS_2.PROVINCIAS(ID);
GO

ALTER TABLE BASE_DE_GATOS_2.DIRECCIONES
ADD CONSTRAINT FK_LOCALIDAD_DIRECCION FOREIGN KEY (LOCALIDAD_ID) REFERENCES BASE_DE_GATOS_2.LOCALIDADES(ID);
GO

ALTER TABLE BASE_DE_GATOS_2.REPARTIDORES
ADD CONSTRAINT FK_REPARTIDOR_LOCALIDAD_ACTIVA_REPARTIDORES FOREIGN KEY (LOCALIDAD_ACTIVA_ID) REFERENCES BASE_DE_GATOS_2.LOCALIDADES(ID),
CONSTRAINT FK_REPARTIDOR_TIPO_MOVILIDAD_REPARTIDORES FOREIGN KEY (MOVILIDAD_ID) REFERENCES BASE_DE_GATOS_2.MOVILIDADES(ID);
GO

ALTER TABLE BASE_DE_GATOS_2.MEDIOS_DE_PAGO
ADD CONSTRAINT FK_TIPO_MEDIO_PAGO_MEDIO_PAGO FOREIGN KEY (TIPO_ID) REFERENCES BASE_DE_GATOS_2.MEDIO_DE_PAGO_TIPOS(ID),
CONSTRAINT FK_TIPO_MARCAS_TARJETA_MEDIO_PAGO FOREIGN KEY (MARCA_TARJETA_ID) REFERENCES BASE_DE_GATOS_2.MARCAS_TARJETA(ID),
CONSTRAINT FK_TIPO_USUARIOS_MEDIO_PAGO FOREIGN KEY (USUARIO_ID) REFERENCES BASE_DE_GATOS_2.USUARIOS(ID);
GO

ALTER TABLE BASE_DE_GATOS_2.DIRECCION_USUARIO
ADD CONSTRAINT FK_USUARIOS_DIRECCION_USUARIO FOREIGN KEY (USUARIO_ID) REFERENCES BASE_DE_GATOS_2.USUARIOS(ID),
CONSTRAINT FK_DIRECCION_DIRECCION_USUARIO FOREIGN KEY (DIRECCION_ID) REFERENCES BASE_DE_GATOS_2.DIRECCIONES(ID);
GO

ALTER TABLE BASE_DE_GATOS_2.PEDIDOS
ADD CONSTRAINT FK_ESTADO_PEDIDO_PEDIDOS FOREIGN KEY (ESTADO_ID) REFERENCES BASE_DE_GATOS_2.PEDIDO_ESTADOS(ID),
CONSTRAINT FK_USUARIO_PEDIDOS FOREIGN KEY (USUARIO_ID) REFERENCES BASE_DE_GATOS_2.USUARIOS(ID),
CONSTRAINT FK_LOCAL_PEDIDOS FOREIGN KEY (LOCAL_ID) REFERENCES BASE_DE_GATOS_2.LOCALES(ID),
CONSTRAINT FK_MEDIO_DE_PAGO_PEDIDOS FOREIGN KEY (MEDIO_PAGO_ID) REFERENCES BASE_DE_GATOS_2.MEDIOS_DE_PAGO(ID),
CONSTRAINT FK_PEDIDO_REPARTIDOR FOREIGN KEY (REPARTIDOR_ID) REFERENCES BASE_DE_GATOS_2.REPARTIDORES(ID),
CONSTRAINT FK_PEDIDO_DIRECCION FOREIGN KEY (DIRECCION_USUARIO_ID) REFERENCES BASE_DE_GATOS_2.DIRECCIONES(ID);
GO

ALTER TABLE BASE_DE_GATOS_2.RECLAMOS
ADD CONSTRAINT FK_TIPO_RECLAMO_RECLAMOS FOREIGN KEY (TIPO_ID) REFERENCES BASE_DE_GATOS_2.RECLAMO_TIPOS(ID),
CONSTRAINT FK_ESTADO_RECLAMO_RECLAMOS FOREIGN KEY (ESTADO_ID) REFERENCES BASE_DE_GATOS_2.RECLAMO_ESTADOS(ID),
CONSTRAINT FK_SOLUCION_RECLAMO_RECLAMOS FOREIGN KEY (SOLUCION_ID) REFERENCES BASE_DE_GATOS_2.RECLAMO_SOLUCIONES(ID),
CONSTRAINT FK_USUARIOS_RECLAMOS FOREIGN KEY (USUARIO_ID) REFERENCES BASE_DE_GATOS_2.USUARIOS(ID),
CONSTRAINT FK_PEDIDOS_RECLAMOS FOREIGN KEY (PEDIDO_NUMERO) REFERENCES BASE_DE_GATOS_2.PEDIDOS(NUMERO),
CONSTRAINT FK_OPERADORES_RECLAMOS FOREIGN KEY (OPERADOR_ID) REFERENCES BASE_DE_GATOS_2.OPERADORES(ID);
GO

ALTER TABLE BASE_DE_GATOS_2.ENVIOS_MENSAJERIA
ADD CONSTRAINT FK_DIR_ORIGEN_ENVIO_MENSAJERIA FOREIGN KEY (DIRECCION_ORIGEN_ID) REFERENCES BASE_DE_GATOS_2.DIRECCIONES(ID),
CONSTRAINT FK_DIR_DESTINO_ENVIO_MENSAJERIA FOREIGN KEY (DIRECCION_DESTINO_ID) REFERENCES BASE_DE_GATOS_2.DIRECCIONES(ID),
CONSTRAINT FK_ESTADO_ENVIO_MENSAJERIA FOREIGN KEY (ESTADO_ID) REFERENCES BASE_DE_GATOS_2.ENVIO_MENSAJERIA_ESTADOS(ID),
CONSTRAINT FK_USUARIO_ENVIO_MENSAJERIA FOREIGN KEY (USUARIO_ID) REFERENCES BASE_DE_GATOS_2.USUARIOS(ID),
CONSTRAINT FK_TIPO_PAQUETE_ENVIO_MENSAJERIA FOREIGN KEY (TIPO_PAQUETE_ID) REFERENCES BASE_DE_GATOS_2.PAQUETE_TIPOS(ID),
CONSTRAINT FK_REPARTIDOR_ENVIO_MENSAJERIA FOREIGN KEY (REPARTIDOR_ID) REFERENCES BASE_DE_GATOS_2.REPARTIDORES(ID),
CONSTRAINT FK_MEDIO_DE_PAGO_ENVIO_MENSAJERIA FOREIGN KEY (MEDIO_PAGO_ID) REFERENCES BASE_DE_GATOS_2.MEDIOS_DE_PAGO(ID);
GO

--Tipo paquetes
CREATE PROCEDURE BASE_DE_GATOS_2.migrar_tipos_paquete
	AS
		BEGIN
		INSERT INTO BASE_DE_GATOS_2.PAQUETE_TIPOS (TIPO, ALTO_MAX, ANCHO_MAX, LARGO_MAX, PESO_MAX, PRECIO)
			SELECT DISTINCT
				PAQUETE_TIPO,
				PAQUETE_ALTO_MAX,
				PAQUETE_ANCHO_MAX,
				PAQUETE_LARGO_MAX,
				PAQUETE_PESO_MAX,
				PAQUETE_TIPO_PRECIO
			FROM 
				gd_esquema.Maestra
			WHERE 
				PAQUETE_TIPO IS NOT NULL
				AND PAQUETE_ALTO_MAX IS NOT NULL
				AND PAQUETE_ANCHO_MAX IS NOT NULL
				AND PAQUETE_LARGO_MAX IS NOT NULL
				AND PAQUETE_PESO_MAX IS NOT NULL
				AND PAQUETE_TIPO_PRECIO IS NOT NULL
		END
GO

--Estado envio mensajeria
CREATE PROCEDURE BASE_DE_GATOS_2.migrar_estados_envio_mensajeria
	AS
		BEGIN
		INSERT INTO BASE_DE_GATOS_2.ENVIO_MENSAJERIA_ESTADOS(ESTADO)
			SELECT DISTINCT
				m.ENVIO_MENSAJERIA_ESTADO
			FROM 
				gd_esquema.Maestra m
			WHERE 
				m.ENVIO_MENSAJERIA_ESTADO IS NOT NULL
		END
GO

-- Horario dias
CREATE PROCEDURE BASE_DE_GATOS_2.migrar_horario_dias
	AS
		BEGIN
		INSERT INTO BASE_DE_GATOS_2.HORARIO_DIAS(DIA)
			SELECT DISTINCT
				m.HORARIO_LOCAL_DIA
			FROM 
				gd_esquema.Maestra m
			WHERE 
				m.HORARIO_LOCAL_DIA IS NOT NULL
		END
GO

--Local tipos
CREATE PROCEDURE BASE_DE_GATOS_2.migrar_local_tipos
	AS
		BEGIN
		INSERT INTO BASE_DE_GATOS_2.LOCAL_TIPOS(TIPO)
			SELECT DISTINCT
				LOCAL_TIPO
			FROM 
				gd_esquema.Maestra
			WHERE 
				LOCAL_TIPO IS NOT NULL
		END
GO

--Local categorias
CREATE PROCEDURE BASE_DE_GATOS_2.migrar_local_categorias
	AS
		BEGIN
		INSERT INTO BASE_DE_GATOS_2.LOCAL_CATEGORIAS(CATEGORIA, TIPO_ID)
			SELECT DISTINCT
				m.LOCAL_TIPO,
				(
					SELECT TOP 1 lt.ID
					FROM BASE_DE_GATOS_2.LOCAL_TIPOS lt 
					WHERE lt.TIPO = m.LOCAL_TIPO
				)
			FROM 
				gd_esquema.Maestra m
			WHERE 
				m.LOCAL_TIPO IS NOT NULL
		END
GO

--Locales
CREATE PROCEDURE BASE_DE_GATOS_2.migrar_locales
	AS
		BEGIN
		INSERT INTO BASE_DE_GATOS_2.LOCALES(NOMBRE, DESCRIPCION, DIRECCION_ID, CATEGORIA_ID)
			SELECT DISTINCT
				m.LOCAL_NOMBRE,
				m.LOCAL_DESCRIPCION,
				d.ID,
				(
					SELECT TOP 1 lc.ID
					FROM BASE_DE_GATOS_2.LOCAL_CATEGORIAS lc
					WHERE lc.CATEGORIA = m.LOCAL_TIPO
				)
			FROM 
				gd_esquema.Maestra m
					JOIN BASE_DE_GATOS_2.PROVINCIAS p ON m.LOCAL_PROVINCIA = p.NOMBRE
					JOIN BASE_DE_GATOS_2.LOCALIDADES l ON m.LOCAL_LOCALIDAD = l.NOMBRE AND l.PROVINCIA_ID = p.ID
					JOIN BASE_DE_GATOS_2.DIRECCIONES d ON m.LOCAL_DIRECCION = d.DIRECCION AND d.LOCALIDAD_ID = l.ID
			WHERE 
				m.LOCAL_NOMBRE IS NOT NULL AND
				m.LOCAL_DESCRIPCION IS NOT NULL AND
				m.LOCAL_DIRECCION IS NOT NULL AND
				m.LOCAL_LOCALIDAD IS NOT NULL AND
				m.LOCAL_TIPO IS NOT NULL 
		END
GO

-- Horarios
CREATE PROCEDURE BASE_DE_GATOS_2.migrar_horarios
	AS
		BEGIN
		INSERT INTO BASE_DE_GATOS_2.HORARIOS(DIA_ID, HORA_APERTURA, HORA_CIERRE, LOCAL_ID)
			SELECT DISTINCT
				(
					SELECT TOP 1 hd.ID
					FROM BASE_DE_GATOS_2.HORARIO_DIAS hd
					WHERE hd.DIA = m.HORARIO_LOCAL_DIA
				),
				m.HORARIO_LOCAL_HORA_APERTURA,
				m.HORARIO_LOCAL_HORA_CIERRE,
				(
					SELECT TOP 1 l.ID
					FROM BASE_DE_GATOS_2.LOCALES l
					WHERE l.NOMBRE = m.LOCAL_NOMBRE
				)
			FROM
				gd_esquema.Maestra m						
			WHERE
				m.HORARIO_LOCAL_DIA IS NOT NULL
				AND m.HORARIO_LOCAL_HORA_APERTURA IS NOT NULL
				AND m.HORARIO_LOCAL_HORA_CIERRE IS NOT NULL
		END
GO

--Productos
CREATE PROCEDURE BASE_DE_GATOS_2.migrar_productos
	AS
		BEGIN
		INSERT INTO BASE_DE_GATOS_2.PRODUCTOS(CODIGO, NOMBRE, DESCRIPCION)
			SELECT DISTINCT
				m.PRODUCTO_LOCAL_CODIGO,
				m.PRODUCTO_LOCAL_NOMBRE,
				m.PRODUCTO_LOCAL_DESCRIPCION
			FROM 
				gd_esquema.Maestra m
			WHERE 
				m.PRODUCTO_LOCAL_CODIGO IS NOT NULL AND
				m.PRODUCTO_LOCAL_NOMBRE IS NOT NULL AND
				m.PRODUCTO_LOCAL_DESCRIPCION IS NOT NULL
		END
GO

-- Local producto
CREATE PROCEDURE BASE_DE_GATOS_2.migrar_local_producto
	AS
		BEGIN
		INSERT INTO BASE_DE_GATOS_2.LOCAL_PRODUCTO(LOCAL_ID, PRODUCTO_ID, PRECIO)
			SELECT DISTINCT
				l.ID,
				p.ID,
				m.PRODUCTO_LOCAL_PRECIO
			FROM 
				gd_esquema.Maestra m
				JOIN BASE_DE_GATOS_2.PRODUCTOS p
					ON p.CODIGO = m.PRODUCTO_LOCAL_CODIGO
				JOIN BASE_DE_GATOS_2.LOCALES l
					ON l.NOMBRE = m.LOCAL_NOMBRE
						AND l.DESCRIPCION = m.LOCAL_DESCRIPCION
			WHERE m.PRODUCTO_LOCAL_CODIGO IS NOT NULL AND
				m.LOCAL_NOMBRE IS NOT NULL
		END
GO

--Usuarios
CREATE PROCEDURE BASE_DE_GATOS_2.migrar_usuarios
	AS
		BEGIN
		INSERT INTO BASE_DE_GATOS_2.USUARIOS(NOMBRE, APELLIDO, DNI, FECHA_REGISTRO, TELEFONO, EMAIL, FECHA_NACIMIENTO)
			SELECT DISTINCT
				m.USUARIO_NOMBRE,
				m.USUARIO_APELLIDO,
				m.USUARIO_DNI,
				m.USUARIO_FECHA_REGISTRO,
				m.USUARIO_TELEFONO,
				m.USUARIO_MAIL,
				m.USUARIO_FECHA_NAC
			FROM 
				gd_esquema.Maestra m
			WHERE 
				m.USUARIO_NOMBRE IS NOT NULL AND
				m.USUARIO_APELLIDO IS NOT NULL AND
				m.USUARIO_DNI IS NOT NULL AND
				m.USUARIO_FECHA_REGISTRO IS NOT NULL AND
				m.USUARIO_TELEFONO IS NOT NULL AND
				m.USUARIO_MAIL IS NOT NULL AND
				m.USUARIO_FECHA_NAC IS NOT NULL
		END
GO

-- Movilidad
CREATE PROCEDURE BASE_DE_GATOS_2.migrar_movilidades
	AS
		BEGIN
		INSERT INTO BASE_DE_GATOS_2.MOVILIDADES(MOVILIDAD)
			SELECT DISTINCT
				m.REPARTIDOR_TIPO_MOVILIDAD
			FROM 
				gd_esquema.Maestra m
			WHERE 
				m.REPARTIDOR_TIPO_MOVILIDAD IS NOT NULL
		END
GO

-- Repartidores
CREATE PROCEDURE BASE_DE_GATOS_2.migrar_repartidores
	AS
		BEGIN
		INSERT INTO BASE_DE_GATOS_2.REPARTIDORES(
			NOMBRE,
			APELLIDO,
			DNI,
			TELEFONO,
			DIRECCION,
			EMAIL,
			FECHA_NACIMIENTO,
			LOCALIDAD_ACTIVA_ID,
			MOVILIDAD_ID
		)
			SELECT DISTINCT
				m.REPARTIDOR_NOMBRE,
				m.REPARTIDOR_APELLIDO,
				m.REPARTIDOR_DNI,
				m.REPARTIDOR_TELEFONO,
				m.REPARTIDOR_DIRECION,
				m.REPARTIDOR_EMAIL,
				m.REPARTIDOR_FECHA_NAC,
				(
					SELECT TOP 1 l.ID
					FROM gd_esquema.Maestra m2
					JOIN BASE_DE_GATOS_2.LOCALIDADES l
						ON l.NOMBRE = m2.DIRECCION_USUARIO_LOCALIDAD
					WHERE m2.DIRECCION_USUARIO_LOCALIDAD IS NOT NULL 
						AND m2.REPARTIDOR_DNI = m.REPARTIDOR_DNI
					ORDER BY m2.PEDIDO_FECHA DESC
				),
				(
					SELECT TOP 1 mv.ID
					FROM gd_esquema.Maestra m2
					JOIN BASE_DE_GATOS_2.MOVILIDADES mv
						ON mv.MOVILIDAD = m2.REPARTIDOR_TIPO_MOVILIDAD
					WHERE m2.REPARTIDOR_TIPO_MOVILIDAD IS NOT NULL 
						AND m2.REPARTIDOR_DNI = m.REPARTIDOR_DNI
					ORDER BY m2.PEDIDO_FECHA DESC
				)
			FROM 
				gd_esquema.Maestra m
			WHERE
				m.REPARTIDOR_DNI IS NOT NULL
		END
GO

-- Envio mensajeria
CREATE PROCEDURE BASE_DE_GATOS_2.migrar_envio_mensajeria
	AS
		BEGIN
		INSERT INTO BASE_DE_GATOS_2.ENVIOS_MENSAJERIA(
			NUMERO, DIRECCION_ORIGEN_ID, DIRECCION_DESTINO_ID, KILOMETROS, VALOR_ASEGURADO, PRECIO_ENVIO, PRECIO_SEGURO,
		PROPINA, TOTAL, OBSERVACION, FECHA, FECHA_ENTREGA, TIEMPO_ESTIMADO_ENTREGA, CALIFICACION, ESTADO_ID, USUARIO_ID, TIPO_PAQUETE_ID,
		REPARTIDOR_ID, MEDIO_PAGO_ID)
			SELECT DISTINCT
				m.ENVIO_MENSAJERIA_NRO,
				d.ID DIR_ORIG,
				d2.ID DIR_DEST,
				m.ENVIO_MENSAJERIA_KM,
				m.ENVIO_MENSAJERIA_VALOR_ASEGURADO,
				m.ENVIO_MENSAJERIA_PRECIO_ENVIO,
				m.ENVIO_MENSAJERIA_PRECIO_SEGURO,
				m.ENVIO_MENSAJERIA_PROPINA,
				m.ENVIO_MENSAJERIA_TOTAL,
				m.ENVIO_MENSAJERIA_OBSERV,
				m.ENVIO_MENSAJERIA_FECHA,
				m.ENVIO_MENSAJERIA_FECHA_ENTREGA,
				m.ENVIO_MENSAJERIA_TIEMPO_ESTIMADO,
				m.ENVIO_MENSAJERIA_CALIFICACION,
				eme.ID,
				u.ID,
				tp.ID,
				r.ID,
				mp.ID
			FROM 
				gd_esquema.Maestra m
			JOIN BASE_DE_GATOS_2.PROVINCIAS p 
				ON m.ENVIO_MENSAJERIA_PROVINCIA = p.NOMBRE
			JOIN BASE_DE_GATOS_2.LOCALIDADES l 
				ON m.ENVIO_MENSAJERIA_LOCALIDAD = l.NOMBRE AND l.PROVINCIA_ID = p.ID
			JOIN BASE_DE_GATOS_2.DIRECCIONES d 
				ON m.ENVIO_MENSAJERIA_DIR_ORIG = d.DIRECCION AND d.LOCALIDAD_ID = l.ID
			JOIN BASE_DE_GATOS_2.DIRECCIONES d2 
				ON m.ENVIO_MENSAJERIA_DIR_DEST = d2.DIRECCION AND d2.LOCALIDAD_ID = l.ID
			JOIN BASE_DE_GATOS_2.ENVIO_MENSAJERIA_ESTADOS eme
				ON m.ENVIO_MENSAJERIA_ESTADO = eme.ESTADO
			JOIN BASE_DE_GATOS_2.USUARIOS u
				ON m.USUARIO_DNI = u.DNI
			JOIN BASE_DE_GATOS_2.PAQUETE_TIPOS tp
				ON m.PAQUETE_TIPO = tp.TIPO
			JOIN BASE_DE_GATOS_2.REPARTIDORES r
				ON m.REPARTIDOR_DNI = r.DNI
			JOIN BASE_DE_GATOS_2.MEDIO_DE_PAGO_TIPOS tmp
				ON m.MEDIO_PAGO_TIPO = tmp.TIPO
			JOIN BASE_DE_GATOS_2.MEDIOS_DE_PAGO mp
				ON u.ID = mp.USUARIO_ID AND
				tmp.ID = mp.TIPO_ID AND
				m.MEDIO_PAGO_NRO_TARJETA = mp.NUMERO_TARJETA
		END
GO

--Estado pedido
CREATE PROCEDURE BASE_DE_GATOS_2.migrar_estados_pedido
	AS
		BEGIN
		INSERT INTO BASE_DE_GATOS_2.PEDIDO_ESTADOS(ESTADO)
			SELECT DISTINCT
				m.PEDIDO_ESTADO
			FROM 
				gd_esquema.Maestra m
			WHERE 
				m.PEDIDO_ESTADO IS NOT NULL
		END
GO

-- Pedidos
CREATE PROCEDURE BASE_DE_GATOS_2.migrar_pedidos
	AS
		BEGIN
		INSERT INTO BASE_DE_GATOS_2.PEDIDOS(
			NUMERO,
			TOTAL_PRODUCTOS,
			TARIFA_SERVICIO,
			TOTAL_CUPONES,
			TOTAL_SERVICIO,
			OBSERVACION,
			FECHA_ENTREGA,
			FECHA,
			TIEMPO_ESTIMADO_ENTREGA,
			CALIFICACION,
			ESTADO_ID,
			USUARIO_ID,
			LOCAL_ID,
			MEDIO_PAGO_ID,
			PRECIO_ENVIO,
			PROPINA,
			REPARTIDOR_ID,
			DIRECCION_USUARIO_ID
		)
			SELECT DISTINCT
				m.PEDIDO_NRO,
				m.PEDIDO_TOTAL_PRODUCTOS,
				m.PEDIDO_TARIFA_SERVICIO,
				m.PEDIDO_TOTAL_CUPONES,
				m.PEDIDO_TOTAL_SERVICIO,
				m.PEDIDO_OBSERV,
				m.PEDIDO_FECHA_ENTREGA,
				m.PEDIDO_FECHA,
				m.PEDIDO_TIEMPO_ESTIMADO_ENTREGA,
				m.PEDIDO_CALIFICACION,
				(
					SELECT TOP 1 ep.ID
					FROM BASE_DE_GATOS_2.PEDIDO_ESTADOS ep
					WHERE ep.ESTADO = m.PEDIDO_ESTADO
				),
				(
					SELECT TOP 1 u.ID
					FROM BASE_DE_GATOS_2.USUARIOS u
					WHERE u.DNI = m.USUARIO_DNI
				),
				(
					SELECT TOP 1 l.ID
					FROM BASE_DE_GATOS_2.LOCALES l
					WHERE l.NOMBRE = m.LOCAL_NOMBRE
				),
				mdp.ID,
				m.PEDIDO_PRECIO_ENVIO,
				m.PEDIDO_PROPINA,
				(
					SELECT TOP 1 r.ID
					FROM BASE_DE_GATOS_2.REPARTIDORES r
					WHERE r.DNI = m.REPARTIDOR_DNI
				),
				d.ID
			FROM
				gd_esquema.Maestra m
					JOIN BASE_DE_GATOS_2.MEDIO_DE_PAGO_TIPOS tmp
						ON tmp.TIPO = m.MEDIO_PAGO_TIPO
					JOIN BASE_DE_GATOS_2.MEDIOS_DE_PAGO mdp
						ON m.MEDIO_PAGO_NRO_TARJETA = mdp.NUMERO_TARJETA
						AND mdp.TIPO_ID = tmp.ID
					JOIN BASE_DE_GATOS_2.DIRECCIONES d
						ON m.DIRECCION_USUARIO_DIRECCION = d.DIRECCION
					JOIN BASE_DE_GATOS_2.DIRECCION_USUARIO du
						ON d.ID = du.DIRECCION_ID AND
						m.DIRECCION_USUARIO_NOMBRE = du.NOMBRE
			WHERE 
				m.PEDIDO_NRO IS NOT NULL AND
				m.PEDIDO_TOTAL_PRODUCTOS IS NOT NULL AND
				m.PEDIDO_TARIFA_SERVICIO IS NOT NULL AND
				m.PEDIDO_TOTAL_CUPONES IS NOT NULL AND
				m.PEDIDO_TOTAL_SERVICIO IS NOT NULL AND
				m.PEDIDO_OBSERV IS NOT NULL AND
				m.PEDIDO_FECHA_ENTREGA IS NOT NULL AND
				m.PEDIDO_FECHA IS NOT NULL AND
				m.PEDIDO_TIEMPO_ESTIMADO_ENTREGA IS NOT NULL AND
				m.PEDIDO_CALIFICACION IS NOT NULL AND
				m.REPARTIDOR_DNI IS NOT NULL AND
				m.DIRECCION_USUARIO_DIRECCION IS NOT NULL
		END
GO

-- Operadores
CREATE PROCEDURE BASE_DE_GATOS_2.migrar_operadores
	AS
		BEGIN
		INSERT INTO BASE_DE_GATOS_2.OPERADORES(NOMBRE, APELLIDO, DNI, TELEFONO, DIRECCION, EMAIL, FECHA_NACIMIENTO)
			SELECT DISTINCT
				m.OPERADOR_RECLAMO_NOMBRE,
				m.OPERADOR_RECLAMO_APELLIDO,
				m.OPERADOR_RECLAMO_DNI,
				m.OPERADOR_RECLAMO_TELEFONO,
				m.OPERADOR_RECLAMO_DIRECCION,
				m.OPERADOR_RECLAMO_MAIL,
				m.OPERADOR_RECLAMO_FECHA_NAC
			FROM 
				gd_esquema.Maestra m
			WHERE 
				m.OPERADOR_RECLAMO_NOMBRE IS NOT NULL AND
				m.OPERADOR_RECLAMO_APELLIDO IS NOT NULL AND
				m.OPERADOR_RECLAMO_DNI IS NOT NULL AND
				m.OPERADOR_RECLAMO_TELEFONO IS NOT NULL AND
				m.OPERADOR_RECLAMO_DIRECCION IS NOT NULL AND
				m.OPERADOR_RECLAMO_MAIL IS NOT NULL AND
				m.OPERADOR_RECLAMO_FECHA_NAC IS NOT NULL
		END
GO

--Tipo reclamo
CREATE PROCEDURE BASE_DE_GATOS_2.migrar_tipo_reclamo
	AS
		BEGIN
		INSERT INTO BASE_DE_GATOS_2.RECLAMO_TIPOS(TIPO)
			SELECT DISTINCT
				m.RECLAMO_TIPO
			FROM 
				gd_esquema.Maestra m
			WHERE 
				m.RECLAMO_TIPO IS NOT NULL
		END
GO

--Estado reclamo
CREATE PROCEDURE BASE_DE_GATOS_2.migrar_estado_reclamo
	AS
		BEGIN
		INSERT INTO BASE_DE_GATOS_2.RECLAMO_ESTADOS(ESTADO)
			SELECT DISTINCT
				m.RECLAMO_ESTADO
			FROM 
				gd_esquema.Maestra m
			WHERE 
				m.RECLAMO_ESTADO IS NOT NULL
		END
GO

--Solucion reclamo
CREATE PROCEDURE BASE_DE_GATOS_2.migrar_solucion_reclamo
	AS
		BEGIN
		INSERT INTO BASE_DE_GATOS_2.RECLAMO_SOLUCIONES(SOLUCION)
			SELECT DISTINCT
				m.RECLAMO_SOLUCION
			FROM 
				gd_esquema.Maestra m
			WHERE 
				m.RECLAMO_SOLUCION IS NOT NULL
		END
GO

-- Reclamos
CREATE PROCEDURE BASE_DE_GATOS_2.migrar_reclamos
	AS
		BEGIN
		INSERT INTO BASE_DE_GATOS_2.RECLAMOS(NUMERO, FECHA, DESCRIPCION, FECHA_SOLUCION, CALIFICACION, SOLUCION_ID, TIPO_ID, ESTADO_ID, USUARIO_ID, PEDIDO_NUMERO, OPERADOR_ID)
			SELECT DISTINCT
				m.RECLAMO_NRO,
				m.RECLAMO_FECHA,
				m.RECLAMO_DESCRIPCION,
				m.RECLAMO_FECHA_SOLUCION,
				m.RECLAMO_CALIFICACION,
				(
					SELECT TOP 1 s.ID
					FROM BASE_DE_GATOS_2.RECLAMO_SOLUCIONES s
					WHERE s.SOLUCION = m.RECLAMO_SOLUCION
				),
				(
					SELECT TOP 1 t.ID
					FROM BASE_DE_GATOS_2.RECLAMO_TIPOS t
					WHERE t.TIPO = m.RECLAMO_TIPO
				),
				(
					SELECT TOP 1 e.ID
					FROM BASE_DE_GATOS_2.RECLAMO_ESTADOS e
					WHERE e.ESTADO = m.RECLAMO_ESTADO
				),
				(
					SELECT TOP 1 u.ID
					FROM BASE_DE_GATOS_2.USUARIOS u
					WHERE u.DNI = m.USUARIO_DNI
				),
				m.PEDIDO_NRO,
				(
					SELECT TOP 1 o.ID
					FROM BASE_DE_GATOS_2.OPERADORES o
					WHERE o.DNI = m.OPERADOR_RECLAMO_DNI
				)
			FROM 
				gd_esquema.Maestra m																		
			WHERE
				m.RECLAMO_NRO IS NOT NULL AND
				m.RECLAMO_FECHA IS NOT NULL AND
				m.PEDIDO_NRO IS NOT NULL 
		END
GO

--Provincias
CREATE PROCEDURE BASE_DE_GATOS_2.migrar_provincias
	AS
		BEGIN
		INSERT INTO BASE_DE_GATOS_2.PROVINCIAS(NOMBRE)
			SELECT DISTINCT
				m.DIRECCION_USUARIO_PROVINCIA
			FROM gd_esquema.Maestra m
			WHERE m.DIRECCION_USUARIO_PROVINCIA IS NOT NULL

			UNION
			
			SELECT 
				m.ENVIO_MENSAJERIA_PROVINCIA
			FROM gd_esquema.Maestra m
			WHERE m.ENVIO_MENSAJERIA_PROVINCIA IS NOT NULL

			UNION

			SELECT 
				m.LOCAL_PROVINCIA
			FROM gd_esquema.Maestra m
			WHERE m.LOCAL_PROVINCIA IS NOT NULL
		END
GO


-- WIP
-- Local Producto Pedido
CREATE PROCEDURE BASE_DE_GATOS_2.migrar_producto_pedido
	AS
		BEGIN
		INSERT INTO BASE_DE_GATOS_2.PRODUCTO_PEDIDO(
			PRODUCTO_ID,
			PEDIDO_NUMERO,
			CANTIDAD,
			PRECIO
		)
			SELECT DISTINCT
				(
					SELECT TOP 1 p.ID
					FROM BASE_DE_GATOS_2.PRODUCTOS p
					WHERE p.CODIGO = m.PRODUCTO_LOCAL_CODIGO
					AND m.PRODUCTO_LOCAL_CODIGO IS NOT NULL
				),
				m.PEDIDO_NRO,
				SUM(m.PRODUCTO_CANTIDAD),
				MAX(m.PRODUCTO_LOCAL_PRECIO)
			FROM
				gd_esquema.Maestra m
			WHERE
				m.PRODUCTO_LOCAL_CODIGO IS NOT NULL AND
				m.PEDIDO_NRO IS NOT NULL
			GROUP BY m.PEDIDO_NRO, m.PRODUCTO_LOCAL_CODIGO
		END
GO

-- Localidades
CREATE PROCEDURE BASE_DE_GATOS_2.migrar_localidades
	AS
		BEGIN
		INSERT INTO BASE_DE_GATOS_2.LOCALIDADES(NOMBRE, PROVINCIA_ID)
			SELECT DISTINCT 
				m.ENVIO_MENSAJERIA_LOCALIDAD, 
				(
					SELECT TOP 1 p.ID
					FROM BASE_DE_GATOS_2.PROVINCIAS p
					WHERE p.NOMBRE = m.ENVIO_MENSAJERIA_PROVINCIA
				)
			FROM gd_esquema.Maestra m
			WHERE m.ENVIO_MENSAJERIA_LOCALIDAD IS NOT NULL

			UNION

			SELECT DISTINCT 
				DIRECCION_USUARIO_LOCALIDAD,
				(
					SELECT TOP 1 p.ID
					FROM BASE_DE_GATOS_2.PROVINCIAS p
					WHERE p.NOMBRE = m.DIRECCION_USUARIO_PROVINCIA
				)
			FROM gd_esquema.Maestra m
			WHERE m.DIRECCION_USUARIO_LOCALIDAD IS NOT NULL

			UNION

			SELECT DISTINCT 
				m.LOCAL_LOCALIDAD,
				(
					SELECT TOP 1 p.ID
					FROM BASE_DE_GATOS_2.PROVINCIAS p
					WHERE p.NOMBRE = m.LOCAL_PROVINCIA
				)
			FROM gd_esquema.Maestra m
			WHERE m.LOCAL_LOCALIDAD IS NOT NULL
		END
GO

-- Direcciones
CREATE PROCEDURE BASE_DE_GATOS_2.migrar_direcciones
	AS
		BEGIN
		INSERT INTO BASE_DE_GATOS_2.DIRECCIONES(DIRECCION, LOCALIDAD_ID)
			SELECT DISTINCT 
				m.ENVIO_MENSAJERIA_DIR_ORIG direcciones,
				l.ID
			FROM gd_esquema.Maestra m
				JOIN BASE_DE_GATOS_2.PROVINCIAS p ON m.ENVIO_MENSAJERIA_PROVINCIA = p.NOMBRE
				JOIN BASE_DE_GATOS_2.LOCALIDADES l ON m.ENVIO_MENSAJERIA_LOCALIDAD = l.NOMBRE AND l.PROVINCIA_ID = p.ID

			UNION

			SELECT DISTINCT 
				m.ENVIO_MENSAJERIA_DIR_DEST,
				l.ID
			FROM gd_esquema.Maestra m
				JOIN BASE_DE_GATOS_2.PROVINCIAS p ON m.ENVIO_MENSAJERIA_PROVINCIA = p.NOMBRE
				JOIN BASE_DE_GATOS_2.LOCALIDADES l ON m.ENVIO_MENSAJERIA_LOCALIDAD = l.NOMBRE AND l.PROVINCIA_ID = p.ID

			UNION

			SELECT DISTINCT 
				m.DIRECCION_USUARIO_DIRECCION,
				l.ID
			FROM gd_esquema.Maestra m
				JOIN BASE_DE_GATOS_2.PROVINCIAS p ON m.DIRECCION_USUARIO_PROVINCIA = p.NOMBRE
				JOIN BASE_DE_GATOS_2.LOCALIDADES l ON m.DIRECCION_USUARIO_LOCALIDAD = l.NOMBRE AND l.PROVINCIA_ID = p.ID

			UNION

			SELECT DISTINCT 
				LOCAL_DIRECCION,
				l.ID
			FROM gd_esquema.Maestra m
				JOIN BASE_DE_GATOS_2.PROVINCIAS p ON m.LOCAL_PROVINCIA = p.NOMBRE
				JOIN BASE_DE_GATOS_2.LOCALIDADES l ON m.LOCAL_LOCALIDAD = l.NOMBRE AND l.PROVINCIA_ID = p.ID
		END
GO

-- Direccion usuario
CREATE PROCEDURE BASE_DE_GATOS_2.migrar_direcciones_usuario
	AS
		BEGIN
		INSERT INTO BASE_DE_GATOS_2.DIRECCION_USUARIO(USUARIO_ID, NOMBRE, DIRECCION_ID)
			SELECT DISTINCT
				u.ID,
				m.DIRECCION_USUARIO_NOMBRE,
				d.ID
			FROM gd_esquema.Maestra m
				JOIN BASE_DE_GATOS_2.PROVINCIAS p ON m.DIRECCION_USUARIO_PROVINCIA = p.NOMBRE
				JOIN BASE_DE_GATOS_2.LOCALIDADES l ON m.DIRECCION_USUARIO_LOCALIDAD = l.NOMBRE AND l.PROVINCIA_ID = p.ID
				JOIN BASE_DE_GATOS_2.DIRECCIONES d ON m.DIRECCION_USUARIO_DIRECCION = d.DIRECCION AND d.LOCALIDAD_ID = l.ID
				JOIN BASE_DE_GATOS_2.USUARIOS u ON m.USUARIO_DNI = u.DNI
			WHERE m.DIRECCION_USUARIO_NOMBRE IS NOT NULL
		END
GO

-- Cupones
CREATE PROCEDURE BASE_DE_GATOS_2.migrar_cupones
	AS
		BEGIN
		INSERT INTO BASE_DE_GATOS_2.CUPONES(NUMERO, MONTO, FECHA_ALTA, FECHA_VENCIMIENTO, USUARIO_ID)
			SELECT DISTINCT
				m.CUPON_NRO,
				m.CUPON_MONTO,
				m.CUPON_FECHA_ALTA,
				m.CUPON_FECHA_VENCIMIENTO,
				(
					SELECT TOP 1 u.ID
					FROM BASE_DE_GATOS_2.USUARIOS u
					WHERE u.DNI = m.USUARIO_DNI
				)
			FROM 
				gd_esquema.Maestra m
			WHERE 
				m.CUPON_NRO IS NOT NULL AND
				m.CUPON_FECHA_ALTA IS NOT NULL

			UNION

			SELECT DISTINCT
				m.CUPON_RECLAMO_NRO,
				m.CUPON_MONTO,
				m.CUPON_FECHA_ALTA,
				m.CUPON_FECHA_VENCIMIENTO,
				(
					SELECT TOP 1 u.ID
					FROM BASE_DE_GATOS_2.USUARIOS u
					WHERE u.DNI = m.USUARIO_DNI
				)
			FROM
				gd_esquema.Maestra m
			WHERE
				m.CUPON_RECLAMO_NRO IS NOT NULL AND
				m.CUPON_RECLAMO_NRO NOT IN
					(
						SELECT DISTINCT m.CUPON_NRO
						FROM gd_esquema.Maestra m
						WHERE m.CUPON_NRO IS NOT NULL AND
						m.CUPON_FECHA_ALTA IS NOT NULL
					)
		
		END
GO

-- Cupon tipo
CREATE PROCEDURE BASE_DE_GATOS_2.migrar_pedido_cupon_tipo
	AS
		BEGIN
		INSERT INTO BASE_DE_GATOS_2.PEDIDO_CUPON_TIPOS(TIPO)
			SELECT DISTINCT
				m.CUPON_TIPO
			FROM 
				gd_esquema.Maestra m
			WHERE 
				m.CUPON_TIPO IS NOT NULL
		END
GO

-- Reclamo cupon tipo
CREATE PROCEDURE BASE_DE_GATOS_2.migrar_reclamo_cupon_tipo
	AS
		BEGIN
		INSERT INTO BASE_DE_GATOS_2.RECLAMO_CUPON_TIPO(TIPO)
			SELECT DISTINCT
				m.CUPON_RECLAMO_TIPO
			FROM 
				gd_esquema.Maestra m
			WHERE 
				m.CUPON_RECLAMO_TIPO IS NOT NULL
		END
GO

-- Reclamo cupon
CREATE PROCEDURE BASE_DE_GATOS_2.migrar_reclamo_cupon
	AS
		BEGIN
		INSERT INTO BASE_DE_GATOS_2.RECLAMO_CUPON(CUPON_NUMERO, RECLAMO_NUMERO, TIPO_ID)
			SELECT DISTINCT
				m.CUPON_RECLAMO_NRO,
				m.RECLAMO_NRO,
				(
					SELECT TOP 1 t.ID
					FROM BASE_DE_GATOS_2.RECLAMO_CUPON_TIPO t
					WHERE m.CUPON_RECLAMO_TIPO = t.TIPO
				)
			FROM 
				gd_esquema.Maestra m
			WHERE
				m.CUPON_RECLAMO_NRO IS NOT NULL AND
				m.RECLAMO_NRO IS NOT NULL AND
				m.CUPON_RECLAMO_TIPO IS NOT NULL
		END
GO

-- Pedido cupon
CREATE PROCEDURE BASE_DE_GATOS_2.migrar_pedido_cupon
	AS
		BEGIN
		INSERT INTO BASE_DE_GATOS_2.PEDIDO_CUPON(PEDIDO_NUMERO, CUPON_NUMERO, TIPO_ID)
			SELECT DISTINCT
				m.PEDIDO_NRO,
				m.CUPON_NRO,
				t.ID
			FROM 
				gd_esquema.Maestra m
			JOIN BASE_DE_GATOS_2.PEDIDO_CUPON_TIPOS t ON m.CUPON_TIPO = t.TIPO
			WHERE 
				m.CUPON_NRO IS NOT NULL AND
				m.PEDIDO_NRO IS NOT NULL
		END
GO

-- Marca tarjeta
CREATE PROCEDURE BASE_DE_GATOS_2.migrar_marcas_tarjeta
	AS
		BEGIN
		INSERT INTO BASE_DE_GATOS_2.MARCAS_TARJETA(NOMBRE)
			SELECT DISTINCT
				m.MARCA_TARJETA
			FROM 
				gd_esquema.Maestra m
			WHERE 
				m.MARCA_TARJETA IS NOT NULL
		END
GO

-- Tipo medio de pago
CREATE PROCEDURE BASE_DE_GATOS_2.migrar_tipo_medio_de_pago
	AS
		BEGIN
		INSERT INTO BASE_DE_GATOS_2.MEDIO_DE_PAGO_TIPOS(TIPO)
			SELECT DISTINCT
				m.MEDIO_PAGO_TIPO
			FROM 
				gd_esquema.Maestra m
			WHERE 
				m.MEDIO_PAGO_TIPO IS NOT NULL
		END
GO

--Medios de pago
CREATE PROCEDURE BASE_DE_GATOS_2.migrar_medios_de_pago
	AS
		BEGIN
		INSERT INTO BASE_DE_GATOS_2.MEDIOS_DE_PAGO(NUMERO_TARJETA, TIPO_ID, MARCA_TARJETA_ID, USUARIO_ID)
			SELECT DISTINCT
				m.MEDIO_PAGO_NRO_TARJETA,
				tmp.ID,
				mar.ID,
				u.ID
			FROM 
				gd_esquema.Maestra m
			JOIN BASE_DE_GATOS_2.MEDIO_DE_PAGO_TIPOS tmp ON m.MEDIO_PAGO_TIPO = tmp.TIPO
			JOIN BASE_DE_GATOS_2.MARCAS_TARJETA mar ON m.MARCA_TARJETA = mar.NOMBRE
			JOIN BASE_DE_GATOS_2.USUARIOS u ON m.USUARIO_DNI = u.DNI
			WHERE 
				m.MEDIO_PAGO_NRO_TARJETA IS NOT NULL
		END
GO

-- Executes
EXEC BASE_DE_GATOS_2.migrar_local_tipos --
EXEC BASE_DE_GATOS_2.migrar_local_categorias --
EXEC BASE_DE_GATOS_2.migrar_provincias --
EXEC BASE_DE_GATOS_2.migrar_localidades --
EXEC BASE_DE_GATOS_2.migrar_direcciones --
EXEC BASE_DE_GATOS_2.migrar_locales --
EXEC BASE_DE_GATOS_2.migrar_horario_dias --
EXEC BASE_DE_GATOS_2.migrar_horarios --
EXEC BASE_DE_GATOS_2.migrar_productos --
EXEC BASE_DE_GATOS_2.migrar_local_producto --
EXEC BASE_DE_GATOS_2.migrar_tipos_paquete --
EXEC BASE_DE_GATOS_2.migrar_estados_envio_mensajeria --
EXEC BASE_DE_GATOS_2.migrar_usuarios --
EXEC BASE_DE_GATOS_2.migrar_direcciones_usuario --
EXEC BASE_DE_GATOS_2.migrar_marcas_tarjeta --
EXEC BASE_DE_GATOS_2.migrar_tipo_medio_de_pago --
EXEC BASE_DE_GATOS_2.migrar_medios_de_pago --
EXEC BASE_DE_GATOS_2.migrar_movilidades --
EXEC BASE_DE_GATOS_2.migrar_repartidores --
EXEC BASE_DE_GATOS_2.migrar_envio_mensajeria --
EXEC BASE_DE_GATOS_2.migrar_estados_pedido --
EXEC BASE_DE_GATOS_2.migrar_pedidos --
EXEC BASE_DE_GATOS_2.migrar_producto_pedido --
EXEC BASE_DE_GATOS_2.migrar_operadores --
EXEC BASE_DE_GATOS_2.migrar_tipo_reclamo --
EXEC BASE_DE_GATOS_2.migrar_estado_reclamo --
EXEC BASE_DE_GATOS_2.migrar_solucion_reclamo --
EXEC BASE_DE_GATOS_2.migrar_reclamos --
EXEC BASE_DE_GATOS_2.migrar_cupones --
EXEC BASE_DE_GATOS_2.migrar_pedido_cupon_tipo --
EXEC BASE_DE_GATOS_2.migrar_reclamo_cupon --
EXEC BASE_DE_GATOS_2.migrar_reclamo_cupon_tipo --
EXEC BASE_DE_GATOS_2.migrar_pedido_cupon --
